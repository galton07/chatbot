{"version":3,"file":"botium-es.js","sources":["../src/Capabilities.js","../src/Source.js","../src/Defaults.js","../src/Fluent.js","../src/Events.js","../src/scripting/Constants.js","../src/mocks/BotiumMockMessage.js","../src/scripting/Convo.js","../src/scripting/CompilerBase.js","../src/scripting/Utterance.js","../src/scripting/CompilerXlsx.js","../src/scripting/CompilerTxt.js","../src/scripting/ScriptingProvider.js","../src/repos/BaseRepo.js","../src/repos/NoRepo.js","../src/helpers/ProcessUtils.js","../src/repos/GitRepo.js","../src/repos/LocalRepo.js","../src/Commands.js","../src/helpers/QueueTimeoutError.js","../src/helpers/Queue.js","../src/containers/BaseContainer.js","../src/containers/GridContainer.js","../src/containers/DockerCmd.js","../src/helpers/TcpPortUtils.js","../src/helpers/SafeFileCopy.js","../src/mocks/BotiumMockCommand.js","../src/containers/DockerMocks.js","../src/helpers/SyslogServer.js","../src/containers/DockerContainer.js","../src/containers/FbContainer.js","../src/containers/WatsonConversationContainer.js","../src/containers/SimpleRestContainer.js","../src/containers/WebSpeechContainer.js","../src/containers/InProcessContainer.js","../src/containers/PluginConnectorContainer.js","../src/BotDriver.js","../index.js"],"sourcesContent":["module.exports = {\n  PROJECTNAME: 'PROJECTNAME',\n  TEMPDIR: 'TEMPDIR',\n  CLEANUPTEMPDIR: 'CLEANUPTEMPDIR',\n  WAITFORBOTTIMEOUT: 'WAITFORBOTTIMEOUT',\n  // \"docker\" \"fbdirect\" \"watsonconversation\", \"simplerest\", \"webspeech\", \"inprocess\"\n  CONTAINERMODE: 'CONTAINERMODE',\n  STARTCMD: 'STARTCMD',\n  DOCKERCOMPOSEPATH: 'DOCKERCOMPOSEPATH',\n  DOCKERMACHINEPATH: 'DOCKERMACHINEPATH',\n  DOCKERMACHINE: 'DOCKERMACHINE',\n  DOCKERIMAGE: 'DOCKERIMAGE',\n  DOCKERUNIQUECONTAINERNAMES: 'DOCKERUNIQUECONTAINERNAMES',\n  DOCKERSYSLOGPORT: 'DOCKERSYSLOGPORT',\n  DOCKERSYSLOGPORT_RANGE: 'DOCKERSYSLOGPORT_RANGE',\n  BOTIUMGRIDURL: 'BOTIUMGRIDURL',\n  BOTIUMAPITOKEN: 'BOTIUMAPITOKEN',\n  BOTIUMGRIDSLOT: 'BOTIUMGRIDSLOT',\n  // Facebook Mocker Settings\n  FACEBOOK_API: 'FACEBOOK_API',\n  FACEBOOK_WEBHOOK_PORT: 'FACEBOOK_WEBHOOK_PORT',\n  FACEBOOK_WEBHOOK_PATH: 'FACEBOOK_WEBHOOK_PATH',\n  FACEBOOK_PUBLISHPORT: 'FACEBOOK_PUBLISHPORT',\n  FACEBOOK_PUBLISHPORT_RANGE: 'FACEBOOK_PUBLISHPORT_RANGE',\n  FACEBOOK_SEND_DELIVERY_CONFIRMATION: 'FACEBOOK_SEND_DELIVERY_CONFIRMATION',\n  // Slack Mocker Settings\n  SLACK_API: 'SLACK_API',\n  SLACK_EVENT_PORT: 'SLACK_EVENT_PORT',\n  SLACK_EVENT_PATH: 'SLACK_EVENT_PATH',\n  SLACK_OAUTH_PORT: 'SLACK_OAUTH_PORT',\n  SLACK_OAUTH_PATH: 'SLACK_OAUTH_PATH',\n  SLACK_PUBLISHPORT: 'SLACK_PUBLISHPORT',\n  SLACK_PUBLISHPORT_RANGE: 'SLACK_PUBLISHPORT_RANGE',\n  // Facebook Direct API Settings\n  FB_PAGEID: 'FB_PAGEID',\n  FB_USER: 'FB_USER',\n  FB_PASSWORD: 'FB_PASSWORD',\n  // Bot Framework Mocker Settings\n  BOTFRAMEWORK_API: 'BOTFRAMEWORK_API',\n  BOTFRAMEWORK_APP_ID: 'BOTFRAMEWORK_APP_ID',\n  BOTFRAMEWORK_CHANNEL_ID: 'BOTFRAMEWORK_CHANNEL_ID',\n  BOTFRAMEWORK_WEBHOOK_PORT: 'BOTFRAMEWORK_WEBHOOK_PORT',\n  BOTFRAMEWORK_WEBHOOK_PATH: 'BOTFRAMEWORK_WEBHOOK_PATH',\n  BOTFRAMEWORK_PUBLISHPORT: 'BOTFRAMEWORK_PUBLISHPORT',\n  BOTFRAMEWORK_PUBLISHPORT_RANGE: 'BOTFRAMEWORK_PUBLISHPORT_RANGE',\n  // Watson Conversation Settings\n  WATSONCONVERSATION_URL: 'WATSONCONVERSATION_URL',\n  WATSONCONVERSATION_VERSION_DATE: 'WATSONCONVERSATION_VERSION_DATE',\n  WATSONCONVERSATION_USER: 'WATSONCONVERSATION_USER',\n  WATSONCONVERSATION_PASSWORD: 'WATSONCONVERSATION_PASSWORD',\n  WATSONCONVERSATION_WORKSPACE_ID: 'WATSONCONVERSATION_WORKSPACE_ID',\n  WATSONCONVERSATION_COPY_WORKSPACE: 'WATSONCONVERSATION_COPY_WORKSPACE',\n  WATSONCONVERSATION_USE_INTENT: 'WATSONCONVERSATION_USE_INTENT',\n  // Simple Reset Bot Settings\n  SIMPLEREST_INIT_CONTEXT: 'SIMPLEREST_INIT_CONTEXT',\n  SIMPLEREST_INIT_TEXT: 'SIMPLEREST_INIT_TEXT',\n  SIMPLEREST_URL: 'SIMPLEREST_URL',\n  SIMPLEREST_METHOD: 'SIMPLEREST_METHOD',\n  SIMPLEREST_HEADERS_TEMPLATE: 'SIMPLEREST_HEADERS_TEMPLATE',\n  SIMPLEREST_BODY_TEMPLATE: 'SIMPLEREST_BODY_TEMPLATE',\n  SIMPLEREST_BODY_RAW: 'SIMPLEREST_BODY_RAW',\n  SIMPLEREST_RESPONSE_JSONPATH: 'SIMPLEREST_RESPONSE_JSONPATH',\n  SIMPLEREST_CONTEXT_JSONPATH: 'SIMPLEREST_CONTEXT_JSONPATH',\n  // Webspeech Settings\n  WEBSPEECH_SERVER_PORT: 'WEBSPEECH_SERVER_PORT',\n  WEBSPEECH_LANGUAGE: 'WEBSPEECH_LANGUAGE',\n  WEBSPEECH_PITCH: 'WEBSPEECH_PITCH',\n  WEBSPEECH_RATE: 'WEBSPEECH_RATE',\n  WEBSPEECH_VOLUME: 'WEBSPEECH_VOLUME',\n  WEBSPEECH_VOICE: 'WEBSPEECH_VOICE',\n  WEBSPEECH_CLOSEBROWSER: 'WEBSPEECH_CLOSEBROWSER',\n  WEBSPEECH_BROWSER_APP: 'WEBSPEECH_BROWSER_APP',\n  // Script Compiler\n  SCRIPTING_TXT_EOL: 'SCRIPTING_TXT_EOL',\n  SCRIPTING_XLSX_STARTROW: 'SCRIPTING_XLSX_STARTROW',\n  SCRIPTING_XLSX_STARTCOL: 'SCRIPTING_XLSX_STARTCOL',\n  SCRIPTING_XLSX_SHEETNAMES: 'SCRIPTING_XLSX_SHEETNAMES',\n  SCRIPTING_XLSX_SHEETNAMES_UTTERANCES: 'SCRIPTING_XLSX_SHEETNAMES_UTTERANCES',\n  SCRIPTING_NORMALIZE_TEXT: 'SCRIPTING_NORMALIZE_TEXT',\n  // regexp, include, includeLowerCase, equals\n  SCRIPTING_MATCHING_MODE: 'SCRIPTING_MATCHING_MODE'\n}\n","module.exports = {\n  LOCALPATH: 'LOCALPATH',\n  GITPATH: 'GITPATH',\n  GITURL: 'GITURL',\n  GITBRANCH: 'GITBRANCH',\n  GITDIR: 'GITDIR',\n  GITPREPARECMD: 'GITPREPARECMD'\n}\n","const Capabilities = require('./Capabilities')\nconst Source = require('./Source')\n\nmodule.exports = {\n  Capabilities: {\n    [Capabilities.PROJECTNAME]: 'defaultproject',\n    [Capabilities.TEMPDIR]: 'botiumwork',\n    [Capabilities.CLEANUPTEMPDIR]: true,\n    [Capabilities.WAITFORBOTTIMEOUT]: 10000,\n    [Capabilities.DOCKERCOMPOSEPATH]: 'docker-compose',\n    [Capabilities.DOCKERMACHINEPATH]: 'docker-machine',\n    [Capabilities.DOCKERMACHINE]: false,\n    [Capabilities.DOCKERIMAGE]: 'node:boron',\n    [Capabilities.DOCKERUNIQUECONTAINERNAMES]: false,\n    [Capabilities.DOCKERSYSLOGPORT_RANGE]: '47100-47299',\n    [Capabilities.SLACK_PUBLISHPORT_RANGE]: '46100-46299',\n    [Capabilities.FACEBOOK_PUBLISHPORT_RANGE]: '46300-46499',\n    [Capabilities.FACEBOOK_SEND_DELIVERY_CONFIRMATION]: true,\n    [Capabilities.BOTFRAMEWORK_PUBLISHPORT_RANGE]: '46500-46699',\n    [Capabilities.BOTFRAMEWORK_WEBHOOK_PORT]: 3978,\n    [Capabilities.BOTFRAMEWORK_WEBHOOK_PATH]: 'api/messages',\n    [Capabilities.BOTFRAMEWORK_CHANNEL_ID]: 'facebook',\n    [Capabilities.WATSONCONVERSATION_URL]: 'https://gateway.watsonplatform.net/conversation/api',\n    [Capabilities.WATSONCONVERSATION_VERSION_DATE]: '2017-05-26',\n    [Capabilities.WATSONCONVERSATION_COPY_WORKSPACE]: false,\n    [Capabilities.WATSONCONVERSATION_USE_INTENT]: false,\n    [Capabilities.SIMPLEREST_METHOD]: 'GET',\n    [Capabilities.WEBSPEECH_SERVER_PORT]: 46050,\n    [Capabilities.WEBSPEECH_LANGUAGE]: 'en-US',\n    [Capabilities.WEBSPEECH_CLOSEBROWSER]: true,\n    [Capabilities.SCRIPTING_TXT_EOL]: '\\n',\n    [Capabilities.SCRIPTING_XLSX_STARTROW]: 1,\n    [Capabilities.SCRIPTING_XLSX_STARTCOL]: 'A',\n    [Capabilities.SCRIPTING_NORMALIZE_TEXT]: true,\n    [Capabilities.SCRIPTING_MATCHING_MODE]: 'includeLowerCase'\n  },\n  Sources: {\n    [Source.LOCALPATH]: '.',\n    [Source.GITPATH]: 'git',\n    [Source.GITBRANCH]: 'master',\n    [Source.GITDIR]: '.'\n  },\n  Envs: {\n    'IS_BOTIUM_CONTAINER': true\n  }\n}\n","const async = require('async')\r\nconst _ = require('lodash')\r\n\r\nmodule.exports = class Fluent {\r\n  constructor (driver) {\r\n    this.driver = driver\r\n    this.compiler = null\r\n    this.container = null\r\n    this.currentChannel = null\r\n    this.tasks = []\r\n\r\n    this.tasks.push(() => {\r\n      return new Promise((resolve, reject) => {\r\n        this.driver.Build()\r\n          .then((container) => {\r\n            this.container = container\r\n            resolve()\r\n          })\r\n          .catch((err) => {\r\n            reject(err)\r\n          })\r\n      })\r\n    })\r\n  }\r\n\r\n  Exec () {\r\n    return new Promise((resolve, reject) => {\r\n      async.eachSeries(this.tasks, (task, cb) => {\r\n        task().then(() => cb()).catch(cb)\r\n      }, (err) => {\r\n        if (err) return reject(err)\r\n        resolve()\r\n      })\r\n    })\r\n  }\r\n\r\n  Start () {\r\n    this.tasks.push(() => {\r\n      return this.container.Start()\r\n    })\r\n    return this\r\n  }\r\n\r\n  SwitchChannel (channel) {\r\n    this.tasks.push(() => {\r\n      this.currentChannel = channel\r\n      return Promise.resolve()\r\n    })\r\n    return this\r\n  }\r\n\r\n  ReadScripts (scriptDir) {\r\n    this.tasks.push(() => {\r\n      return new Promise((resolve, reject) => {\r\n        if (this.compiler == null) {\r\n          try {\r\n            this.compiler = this.driver.BuildCompiler()\r\n          } catch (err) {\r\n            return reject(err)\r\n          }\r\n        }\r\n        try {\r\n          this.compiler.ReadScriptsFromDirectory(scriptDir)\r\n          resolve()\r\n        } catch (err) {\r\n          reject(err)\r\n        }\r\n      })\r\n    })\r\n    return this\r\n  }\r\n\r\n  Compile (scriptBuffer, scriptFormat, scriptType) {\r\n    this.tasks.push(() => {\r\n      return new Promise((resolve, reject) => {\r\n        if (this.compiler == null) {\r\n          try {\r\n            this.compiler = this.driver.BuildCompiler()\r\n          } catch (err) {\r\n            return reject(err)\r\n          }\r\n        }\r\n        try {\r\n          this.compiler.Compile(scriptBuffer, scriptFormat, scriptType)\r\n          resolve()\r\n        } catch (err) {\r\n          reject(err)\r\n        }\r\n      })\r\n    })\r\n    return this\r\n  }\r\n\r\n  RunScripts (assertCb, failCb) {\r\n    this.tasks.push(() => {\r\n      return new Promise((resolve, reject) => {\r\n        if (assertCb) {\r\n          this.compiler.scriptingEvents.assertBotResponse = assertCb.bind(this.compiler)\r\n        }\r\n        if (failCb) {\r\n          this.compiler.scriptingEvents.fail = failCb.bind(this.compiler)\r\n        }\r\n\r\n        this.compiler.ExpandConvos()\r\n\r\n        async.eachSeries(this.compiler.convos, (convo, convoDone) => {\r\n          convo.Run(this.container).then(() => convoDone()).catch(convoDone)\r\n        },\r\n        (err) => {\r\n          if (err) return reject(err)\r\n          else resolve()\r\n        })\r\n      })\r\n    })\r\n    return this\r\n  }\r\n\r\n  UserSaysText (msg) {\r\n    this.tasks.push(() => {\r\n      if (this.currentChannel) {\r\n        return this.container.UserSays({ messageText: msg, channel: this.currentChannel })\r\n      } else {\r\n        return this.container.UserSaysText(msg)\r\n      }\r\n    })\r\n    return this\r\n  }\r\n\r\n  UserSays (msg) {\r\n    this.tasks.push(() => {\r\n      if (this.currentChannel && !msg.channel) {\r\n        msg = Object.assign({}, msg)\r\n        msg.channel = this.currentChannel\r\n      }\r\n      return this.container.UserSays(msg)\r\n    })\r\n    return this\r\n  }\r\n\r\n  WaitBotSays (channel = null, timeoutMillis = null, callback = null) {\r\n    if (!callback) {\r\n      if (timeoutMillis && _.isFunction(timeoutMillis)) {\r\n        callback = timeoutMillis\r\n        timeoutMillis = null\r\n      } else if (!timeoutMillis && channel && _.isFunction(channel)) {\r\n        callback = channel\r\n        timeoutMillis = null\r\n        channel = null\r\n      }\r\n    }\r\n\r\n    this.tasks.push(() => {\r\n      return new Promise((resolve, reject) => {\r\n        if (this.currentChannel && !channel) {\r\n          channel = this.currentChannel\r\n        }\r\n        this.container.WaitBotSays(channel, timeoutMillis)\r\n          .then((botMsg) => {\r\n            if (callback) callback(botMsg)\r\n            resolve()\r\n          })\r\n          .catch((err) => {\r\n            reject(err)\r\n          })\r\n      })\r\n    })\r\n    return this\r\n  }\r\n\r\n  WaitBotSaysText (channel = null, timeoutMillis = null, callback = null) {\r\n    if (!callback) {\r\n      if (timeoutMillis && _.isFunction(timeoutMillis)) {\r\n        callback = timeoutMillis\r\n        timeoutMillis = null\r\n      } else if (!timeoutMillis && channel && _.isFunction(channel)) {\r\n        callback = channel\r\n        timeoutMillis = null\r\n        channel = null\r\n      }\r\n    }\r\n\r\n    this.tasks.push(() => {\r\n      return new Promise((resolve, reject) => {\r\n        if (this.currentChannel && !channel) {\r\n          channel = this.currentChannel\r\n        }\r\n        this.container.WaitBotSaysText(channel, timeoutMillis)\r\n          .then((text) => {\r\n            if (callback) callback(text)\r\n            resolve()\r\n          })\r\n          .catch((err) => {\r\n            reject(err)\r\n          })\r\n      })\r\n    })\r\n    return this\r\n  }\r\n\r\n  Restart () {\r\n    this.tasks.push(() => {\r\n      return this.container.Restart()\r\n    })\r\n    return this\r\n  }\r\n\r\n  Stop () {\r\n    this.tasks.push(() => {\r\n      return this.container.Stop()\r\n    })\r\n    return this\r\n  }\r\n\r\n  Clean () {\r\n    this.tasks.push(() => {\r\n      return this.container.Clean()\r\n    })\r\n    return this\r\n  }\r\n}\r\n","module.exports = {\n  // Botium Events\n  CONTAINER_BUILDING: 'CONTAINER_BUILDING',\n  CONTAINER_BUILT: 'CONTAINER_BUILT',\n  CONTAINER_BUILD_ERROR: 'CONTAINER_BUILD_ERROR',\n  CONTAINER_STARTING: 'CONTAINER_STARTING',\n  CONTAINER_STARTED: 'CONTAINER_STARTED',\n  CONTAINER_START_ERROR: 'CONTAINER_START_ERROR',\n  CONTAINER_STOPPING: 'CONTAINER_STOPPING',\n  CONTAINER_STOPPED: 'CONTAINER_STOPPED',\n  CONTAINER_STOP_ERROR: 'CONTAINER_STOP_ERROR',\n  CONTAINER_CLEANING: 'CONTAINER_CLEANING',\n  CONTAINER_CLEANED: 'CONTAINER_CLEANED',\n  CONTAINER_CLEAN_ERROR: 'CONTAINER_CLEAN_ERROR',\n  BOT_CONNECTED: 'BOT_CONNECTED',\n  // Chatbot Events\n  MESSAGE_SENTTOBOT: 'MESSAGE_SENTTOBOT',\n  MESSAGE_SENDTOBOT_ERROR: 'MESSAGE_SENDTOBOT_ERROR',\n  MESSAGE_RECEIVEDFROMBOT: 'MESSAGE_RECEIVEDFROMBOT',\n  MESSAGE_RECEIVEFROMBOT_ERROR: 'MESSAGE_RECEIVEFROMBOT_ERROR',\n  // Botium Agent Events\n  TOOMUCHWORKERS_ERROR: 'TOOMUCHWORKERS_ERROR'\n}\n","module.exports = {\n  SCRIPTING_FORMAT_XSLX: 'SCRIPTING_FORMAT_XSLX',\n  SCRIPTING_FORMAT_TXT: 'SCRIPTING_FORMAT_TXT',\n  SCRIPTING_FORMAT_YAML: 'SCRIPTING_FORMAT_YAML',\n  SCRIPTING_TYPE_CONVO: 'SCRIPTING_TYPE_CONVO',\n  SCRIPTING_TYPE_UTTERANCES: 'SCRIPTING_TYPE_UTTERANCES'\n}\n","module.exports = class BotiumMockMessage {\r\n  constructor (fromJson = {}) {\r\n    this.sender = fromJson.sender\r\n    this.channel = fromJson.channel\r\n    this.messageText = fromJson.messageText\r\n    this.sourceData = fromJson.sourceData\r\n    this.sourceAction = fromJson.sourceAction\r\n  }\r\n}\r\n","const util = require('util')\nconst async = require('async')\nconst _ = require('lodash')\nconst debug = require('debug')('botium-Convo')\n\nconst BotiumMockMessage = require('../mocks/BotiumMockMessage')\nconst Capabilities = require('../Capabilities')\n\nclass ConvoHeader {\n  constructor (fromJson = {}) {\n    this.name = fromJson.name\n    this.order = fromJson.order\n    this.description = fromJson.description\n  }\n\n  toString () { return this.order + ' ' + this.name + (this.description ? ` (${this.description})` : '') }\n}\n\nclass ConvoStep {\n  constructor (fromJson = {}) {\n    this.sender = fromJson.sender\n    this.channel = fromJson.channel\n    this.messageText = fromJson.messageText\n    this.sourceData = fromJson.sourceData\n    this.stepTag = fromJson.stepTag\n    this.not = fromJson.not\n  }\n\n  toString () { return this.stepTag + ': #' + this.sender + ' - ' + (this.not ? '!' : '') + this.messageText }\n}\n\nclass Convo {\n  constructor (provider, fromJson = {}) {\n    this.provider = provider\n    this.header = new ConvoHeader(fromJson.header)\n    if (fromJson.conversation && _.isArray(fromJson.conversation)) {\n      this.conversation = _.map(fromJson.conversation, (step) => new ConvoStep(step))\n    } else {\n      this.conversation = []\n    }\n    this.sourceTag = fromJson.sourceTag\n  }\n\n  toString () { return this.header.toString() + (this.sourceTag ? ` (${this.sourceTag})` : '') + ': ' + this.conversation.map((c) => c.toString()).join(' | ') }\n\n  Run (container) {\n    return new Promise((resolve, reject) => {\n      async.eachSeries(this.conversation,\n        (convoStep, convoStepDone) => {\n          if (convoStep.sender === 'me') {\n            convoStep.messageText = this._checkNormalizeText(container, convoStep.messageText)\n            debug(`${this.header.name}/${convoStep.stepTag}: user says ${util.inspect(convoStep)}`)\n            container.UserSays(new BotiumMockMessage(convoStep))\n              .then(() => convoStepDone())\n              .catch((err) => {\n                convoStepDone(new Error(`${this.header.name}/${convoStep.stepTag}: error sending to bot ${util.inspect(err)}`))\n              })\n          } else if (convoStep.sender === 'bot') {\n            debug(`${this.header.name} wait for bot ${util.inspect(convoStep.channel)}`)\n            container.WaitBotSays(convoStep.channel).then((saysmsg) => {\n              debug(`${this.header.name}: bot says ${util.inspect(saysmsg)}`)\n              if (!saysmsg || (!saysmsg.messageText && !saysmsg.sourceData)) {\n                try {\n                  this.provider.scriptingEvents.fail(`${this.header.name}/${convoStep.stepTag}: bot says nothing`)\n                } catch (err) {\n                  convoStepDone(err)\n                }\n              } else if (convoStep.messageText) {\n                const response = this._checkNormalizeText(container, saysmsg.messageText)\n                const tomatch = this._checkNormalizeText(container, convoStep.messageText)\n                if (convoStep.not) {\n                  try {\n                    this.provider.scriptingEvents.assertBotNotResponse(response, tomatch, `${this.header.name}/${convoStep.stepTag}`)\n                    convoStepDone()\n                  } catch (err) {\n                    convoStepDone(err)\n                  }\n                } else {\n                  try {\n                    this.provider.scriptingEvents.assertBotResponse(response, tomatch, `${this.header.name}/${convoStep.stepTag}`)\n                    convoStepDone()\n                  } catch (err) {\n                    convoStepDone(err)\n                  }\n                }\n              } else if (convoStep.sourceData) {\n                try {\n                  this._compareObject(container, convoStep, saysmsg.sourceData, convoStep.sourceData)\n                  convoStepDone()\n                } catch (err) {\n                  convoStepDone(err)\n                }\n              } else {\n                convoStepDone()\n              }\n            }).catch((err) => {\n              try {\n                this.provider.scriptingEvents.fail(`${this.header.name}/${convoStep.stepTag}: error waiting for bot ${util.inspect(err)}`)\n              } catch (err) {\n                convoStepDone(err)\n              }\n            })\n          } else {\n            try {\n              this.provider.scriptingEvents.fail(`${this.header.name}/${convoStep.stepTag}: invalid sender ${util.inspect(convoStep.sender)}`)\n            } catch (err) {\n              convoStepDone(err)\n            }\n          }\n        },\n        (err) => {\n          if (err) {\n            reject(err)\n          } else {\n            resolve()\n          }\n        })\n    })\n  }\n\n  _compareObject (container, convoStep, result, expected) {\n    if (expected === null || expected === undefined) return\n\n    if (_.isArray(expected)) {\n      if (!_.isArray(result)) {\n        throw new Error(`${this.header.name}/${convoStep.stepTag}: bot response expected array, got \"${result}\"`)\n      }\n      if (expected.length !== result.length) {\n        throw new Error(`${this.header.name}/${convoStep.stepTag}: bot response expected array length ${expected.length}, got ${result.length}`)\n      }\n      for (var i = 0; i < expected.length; i++) {\n        this._compareObject(container, convoStep, result[i], expected[i])\n      }\n    } else if (_.isObject(expected)) {\n      _.forOwn(expected, (value, key) => {\n        if (result.hasOwnProperty(key)) {\n          this._compareObject(container, convoStep, result[key], expected[key])\n        } else {\n          throw new Error(`${this.header.name}/${convoStep.stepTag}: bot response \"${result}\" missing expected property: ${key}`)\n        }\n      })\n    } else {\n      const response = this._checkNormalizeText(container, result)\n      const tomatch = this._checkNormalizeText(container, expected)\n      this.provider.scriptingEvents.assertBotResponse(response, tomatch, `${this.header.name}/${convoStep.stepTag}`)\n    }\n  }\n\n  _checkNormalizeText (container, str) {\n    if (str && !_.isString(str)) {\n      if (str.toString) str = str.toString()\n      else str = `${str}`\n    }\n    if (str && container.caps[Capabilities.SCRIPTING_NORMALIZE_TEXT]) {\n      // remove html tags\n      str = str.replace(/<p[^>]*>/g, ' ')\n      str = str.replace(/<\\/p>/g, ' ')\n      str = str.replace(/<br[^>]*>/g, ' ')\n      str = str.replace(/<[^>]*>/g, '')\n      /* eslint-disable no-control-regex */\n      // remove not printable characters\n      str = str.replace(/[\\x00-\\x1F\\x7F]/g, ' ')\n      /* eslint-enable no-control-regex */\n      // replace html entities\n      str = str\n        .replace(/&amp;/g, '&')\n        .replace(/&lt;/g, '<')\n        .replace(/&gt;/g, '>')\n        .replace(/&#39;/g, \"'\")\n        .replace(/&quot;/g, '\"')\n      // replace two spaces with one\n      str = str.replace(/\\s+/g, ' ')\n\n      str = str.trim()\n    }\n    return str\n  }\n}\n\nmodule.exports = {\n  ConvoHeader,\n  Convo,\n  ConvoStep\n}\n","module.exports = class CompilerBase {\n  constructor (provider, caps = {}) {\n    this.provider = provider\n    this.caps = caps\n  }\n\n  Validate () {\n  }\n\n  GetHeaders (scriptBuffer) {\n    const convos = this.Compile(scriptBuffer)\n    if (convos) {\n      return convos.map((convo) => convo.header)\n    } else {\n      return []\n    }\n  }\n\n  Compile (scriptBuffer, scriptType) {\n    throw new Error(`not implemented`)\n  }\n\n  Decompile (convos) {\n    throw new Error(`not implemented`)\n  }\n\n  _AssertCapabilityExists (cap) {\n    if (!this.caps[cap]) {\n      throw new Error(`Capability property ${cap} not set`)\n    }\n  }\n}\n","const _ = require('lodash')\n\nmodule.exports = class Utterance {\n  constructor (fromJson = {}) {\n    this.name = fromJson.name\n    this.utterances = []\n    if (fromJson.utterances && _.isArray(fromJson.utterances)) {\n      this.utterances = fromJson.utterances\n    } else if (fromJson.utterances) {\n      this.utterances.push(fromJson.utterances)\n    }\n  }\n\n  toString () { return this.name + ': ' + this.utterances.join('|') }\n}\n","const util = require('util')\nconst isJSON = require('is-json')\nconst XLSX = require('xlsx')\nconst _ = require('lodash')\nconst debug = require('debug')('botium-CompilerXlsx')\n\nconst Capabilities = require('../Capabilities')\nconst CompilerBase = require('./CompilerBase')\nconst Constants = require('./Constants')\nconst Utterance = require('./Utterance')\nconst { Convo } = require('./Convo')\n\nmodule.exports = class CompilerXlsx extends CompilerBase {\n  constructor (provider, caps = {}) {\n    super(provider, caps)\n\n    this.colnames = [ 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z' ]\n  }\n\n  Validate () {\n    super.Validate()\n    this._AssertCapabilityExists(Capabilities.SCRIPTING_XLSX_STARTROW)\n    this._AssertCapabilityExists(Capabilities.SCRIPTING_XLSX_STARTCOL)\n\n    if (_.isString(this.caps[Capabilities.SCRIPTING_XLSX_STARTCOL]) && this.colnames.findIndex((c) => c === this.caps[Capabilities.SCRIPTING_XLSX_STARTCOL]) < 0) {\n      throw new Error(`SCRIPTING_XLSX_STARTCOL ${this.caps[Capabilities.SCRIPTING_XLSX_STARTCOL]} invalid (A-Z)`)\n    } else if (this.caps[Capabilities.SCRIPTING_XLSX_STARTCOL] < 1 || this.caps[Capabilities.SCRIPTING_XLSX_STARTCOL] > this.colnames.length) {\n      throw new Error(`SCRIPTING_XLSX_STARTCOL ${this.caps[Capabilities.SCRIPTING_XLSX_STARTCOL]} invalid (1-${this.colnames.length})`)\n    }\n  }\n\n  Compile (scriptBuffer, scriptType = Constants.SCRIPTING_TYPE_CONVO) {\n    const workbook = XLSX.read(scriptBuffer, { type: 'buffer' })\n    if (!workbook) throw new Error(`Workbook not readable`)\n\n    let sheetnames = []\n    if (scriptType === Constants.SCRIPTING_TYPE_CONVO) {\n      if (this.caps[Capabilities.SCRIPTING_XLSX_SHEETNAMES]) {\n        sheetnames = this.caps[Capabilities.SCRIPTING_XLSX_SHEETNAMES].split(/\\s*[;,\\s|]\\s*/) || []\n      } else {\n        sheetnames = workbook.SheetNames || []\n      }\n    } else if (scriptType === Constants.SCRIPTING_TYPE_UTTERANCES) {\n      if (this.caps[Capabilities.SCRIPTING_XLSX_SHEETNAMES_UTTERANCES]) {\n        sheetnames = this.caps[Capabilities.SCRIPTING_XLSX_SHEETNAMES_UTTERANCES].split(/\\s*[;,\\s|]\\s*/) || []\n      } else {\n        sheetnames = workbook.SheetNames || []\n      }\n    }\n    debug(`sheet names for ${scriptType}: ${util.inspect(sheetnames)}`)\n\n    const scriptResults = []\n\n    sheetnames.forEach((sheetname) => {\n      const sheet = workbook.Sheets[sheetname]\n      if (!sheet) return\n\n      let rowindex = this.caps[Capabilities.SCRIPTING_XLSX_STARTROW]\n      let colindex = this.caps[Capabilities.SCRIPTING_XLSX_STARTCOL] - 1\n      if (_.isString(this.caps[Capabilities.SCRIPTING_XLSX_STARTCOL])) {\n        colindex = this.colnames.findIndex((c) => c === this.caps[Capabilities.SCRIPTING_XLSX_STARTCOL])\n      }\n      debug(`evaluating sheet name for ${scriptType}: ${util.inspect(sheetname)}, rowindex ${rowindex}, colindex ${colindex}`)\n\n      if (scriptType === Constants.SCRIPTING_TYPE_CONVO) {\n        const parseCell = (content) => {\n          if (!content) return {}\n\n          if (!_.isString(content)) content = '' + content\n\n          let not = false\n          if (content.startsWith('!')) {\n            not = true\n            content = content.substr(1)\n          }\n          if (isJSON(content)) {\n            return { not, sourceData: JSON.parse(content) }\n          } else {\n            return { not, messageText: content }\n          }\n        }\n\n        let currentConvo = []\n        let emptylines = 0\n        let startcell = null\n        while (true) {\n          const meCell = this.colnames[colindex] + rowindex\n          const botCell = this.colnames[colindex + 1] + rowindex\n\n          if (sheet[meCell] && sheet[meCell].v) {\n            currentConvo.push(Object.assign(\n              { sender: 'me', stepTag: 'Cell ' + meCell },\n              parseCell(sheet[meCell].v)\n            ))\n            if (!startcell) startcell = meCell\n            emptylines = 0\n          } else if (sheet[botCell] && sheet[botCell].v) {\n            currentConvo.push(Object.assign(\n              { sender: 'bot', stepTag: 'Cell ' + botCell },\n              parseCell(sheet[botCell].v)\n            ))\n            if (!startcell) startcell = botCell\n            emptylines = 0\n          } else {\n            if (currentConvo.length > 0) {\n              scriptResults.push(new Convo(this.provider, {\n                header: {\n                  name: `${sheetname}-${startcell}`\n                },\n                conversation: currentConvo\n              }))\n            }\n            currentConvo = []\n            startcell = null\n            emptylines++\n          }\n          rowindex++\n\n          if (emptylines > 1) break\n        }\n      }\n\n      if (scriptType === Constants.SCRIPTING_TYPE_UTTERANCES) {\n        let currentUtterance = null\n        let emptylines = 0\n        while (true) {\n          const nameCell = this.colnames[colindex] + rowindex\n          const uttCell = this.colnames[colindex + 1] + rowindex\n\n          if (sheet[nameCell] && sheet[nameCell].v && sheet[uttCell] && sheet[uttCell].v) {\n            currentUtterance = new Utterance({ name: sheet[nameCell].v, utterances: [ sheet[uttCell].v ] })\n            scriptResults.push(currentUtterance)\n            emptylines = 0\n          } else if (sheet[uttCell] && sheet[uttCell].v) {\n            if (currentUtterance) currentUtterance.utterances.push(sheet[uttCell].v)\n            emptylines = 0\n          } else {\n            currentUtterance = null\n            emptylines++\n          }\n          rowindex++\n\n          if (emptylines > 1) break\n        }\n      }\n    })\n\n    if (scriptResults && scriptResults.length > 0) {\n      if (scriptType === Constants.SCRIPTING_TYPE_CONVO) {\n        this.provider.AddConvos(scriptResults)\n      } else if (scriptType === Constants.SCRIPTING_TYPE_UTTERANCES) {\n        this.provider.AddUtterances(scriptResults)\n      }\n      return scriptResults\n    }\n  }\n}\n","const isJSON = require('is-json')\nconst _ = require('lodash')\n\nconst Capabilities = require('../Capabilities')\nconst Constants = require('./Constants')\nconst CompilerBase = require('./CompilerBase')\nconst Utterance = require('./Utterance')\nconst { ConvoHeader, Convo } = require('./Convo')\n\nmodule.exports = class CompilerTxt extends CompilerBase {\n  constructor (provider, caps = {}) {\n    super(provider, caps)\n\n    this.eol = caps[Capabilities.SCRIPTING_TXT_EOL]\n  }\n\n  Validate () {\n    super.Validate()\n    this._AssertCapabilityExists(Capabilities.SCRIPTING_TXT_EOL)\n  }\n\n  GetHeaders (scriptBuffer) {\n    let scriptData = scriptBuffer\n    if (Buffer.isBuffer(scriptBuffer)) scriptData = scriptData.toString()\n\n    let lines = scriptData.split(this.eol)\n\n    let header = { }\n\n    if (lines && !lines[0].startsWith('#')) {\n      header.name = lines[0]\n    }\n    return new ConvoHeader(header)\n  }\n\n  Compile (scriptBuffer, scriptType = Constants.SCRIPTING_TYPE_CONVO) {\n    let scriptData = scriptBuffer\n    if (Buffer.isBuffer(scriptBuffer)) scriptData = scriptData.toString()\n\n    let lines = _.map(scriptData.split(this.eol), (line) => line.trim())\n\n    if (scriptType === Constants.SCRIPTING_TYPE_CONVO) {\n      return this._compileConvo(lines)\n    } else if (scriptType === Constants.SCRIPTING_TYPE_UTTERANCES) {\n      return this._compileUtterances(lines)\n    }\n  }\n\n  _compileConvo (lines) {\n    let convo = {\n      header: {},\n      conversation: []\n    }\n\n    let currentLineIndex = 0\n    let currentLines = []\n    let currentSender = null\n    let currentChannel = null\n\n    const parseMsg = (lines) => {\n      if (!lines) return null\n\n      let not = false\n      if (lines[0].startsWith('!')) {\n        not = true\n        lines[0] = lines[0].substr(1)\n      }\n      let content = lines.join(' ')\n      if (isJSON(content)) {\n        return { not, sourceData: JSON.parse(content) }\n      } else {\n        return { not, messageText: lines.join(this.eol) }\n      }\n    }\n\n    let pushPrev = () => {\n      if (currentSender && currentLines) {\n        const convoStep = {\n          sender: currentSender,\n          channel: currentChannel,\n          stepTag: 'Line ' + currentLineIndex\n        }\n        let { not, messageText, sourceData } = parseMsg(currentLines)\n        convoStep.not = not\n        convoStep.messageText = messageText\n        convoStep.sourceData = sourceData\n        convo.conversation.push(convoStep)\n      } else if (!currentSender && currentLines) {\n        convo.header.name = currentLines[0]\n        if (currentLines.length > 1) {\n          convo.header.description = currentLines.slice(1).join(this.eol)\n        }\n      }\n    }\n\n    lines.forEach((line) => {\n      currentLineIndex++\n      line = line.trim()\n      if (!line) {\n      } else if (line.startsWith('#')) {\n        pushPrev()\n\n        currentSender = line.substr(1)\n        currentChannel = null\n        if (currentSender.indexOf(' ') > 0) {\n          currentChannel = currentSender.substr(currentSender.indexOf(' ') + 1).trim()\n          currentSender = currentSender.substr(0, currentSender.indexOf(' ')).trim()\n        }\n        currentLines = []\n      } else {\n        currentLines.push(line)\n      }\n    })\n    pushPrev()\n\n    let result = [ new Convo(this.provider, convo) ]\n    this.provider.AddConvos(result)\n    return result\n  }\n\n  _compileUtterances (lines) {\n    if (lines && lines.length > 1) {\n      let result = [ new Utterance({ name: lines[0], utterances: lines.slice(1) }) ]\n      this.provider.AddUtterances(result)\n      return result\n    }\n  }\n\n  Decompile (convos) {\n    if (convos.length > 1) {\n      throw new Error('only one convo per script')\n    }\n\n    const convo = convos[0]\n\n    let script = ''\n\n    if (convo.header.name) {\n      script += convo.header.name + this.eol\n    }\n    if (convo.header.description) {\n      script += convo.header.description + this.eol\n    }\n\n    convo.conversation.forEach((set) => {\n      if (!set.messageText && !set.sourceData) return\n\n      script += this.eol\n\n      script += '#' + set.sender\n      if (set.channel) {\n        script += ' ' + set.channel\n      }\n      script += this.eol\n\n      if (set.messageText) {\n        if (set.not) {\n          script += '!'\n        }\n        script += set.messageText + this.eol\n      } else if (set.sourceData) {\n        if (set.not) {\n          script += '!'\n        }\n        script += JSON.stringify(set.sourceData, null, 2) + this.eol\n      }\n    })\n    return script\n  }\n}\n","const util = require('util')\nconst fs = require('fs')\nconst path = require('path')\nconst glob = require('glob')\nconst _ = require('lodash')\nconst debug = require('debug')('botium-ScriptingProvider')\n\nconst Constants = require('./Constants')\nconst Capabilities = require('../Capabilities')\nconst { Convo } = require('./Convo')\n\nconst globPattern = '**/+(*.convo.txt|*.utterances.txt|*.xlsx)'\n\nmodule.exports = class ScriptingProvider {\n  constructor (caps = {}) {\n    this.caps = caps\n    this.compilers = {}\n    this.convos = []\n    this.utterances = { }\n    this.match = null\n\n    this.scriptingEvents = {\n      assertBotResponse: (botresponse, tomatch, stepTag) => {\n        if (!_.isArray(tomatch)) {\n          if (this.utterances[tomatch]) {\n            tomatch = this.utterances[tomatch].utterances\n          } else {\n            tomatch = [ tomatch ]\n          }\n        }\n        const found = _.find(tomatch, (utt) => {\n          if (_.isString(botresponse)) {\n            return this.match(botresponse, utt)\n          } else {\n            return botresponse === utt\n          }\n        })\n        if (!found) {\n          throw new Error(`${stepTag}: Expected bot response \"${botresponse}\" to match one of \"${tomatch}\"`)\n        }\n      },\n      assertBotNotResponse: (botresponse, nottomatch, stepTag) => {\n        try {\n          this.scriptingEvents.assertBotResponse(botresponse, nottomatch)\n          throw new Error(`${stepTag}: Expected bot response \"${botresponse}\" NOT to match one of \"${nottomatch}\"`)\n        } catch (err) {\n        }\n      },\n      fail: (msg) => {\n        throw new Error(msg)\n      }\n    }\n  }\n\n  Build () {\n    const CompilerXlsx = require('./CompilerXlsx')\n    this.compilers[Constants.SCRIPTING_FORMAT_XSLX] = new CompilerXlsx(this, this.caps)\n    this.compilers[Constants.SCRIPTING_FORMAT_XSLX].Validate()\n    const CompilerTxt = require('./CompilerTxt')\n    this.compilers[Constants.SCRIPTING_FORMAT_TXT] = new CompilerTxt(this, this.caps)\n    this.compilers[Constants.SCRIPTING_FORMAT_TXT].Validate()\n\n    debug('Using matching mode: ' + this.caps[Capabilities.SCRIPTING_MATCHING_MODE])\n    if (this.caps[Capabilities.SCRIPTING_MATCHING_MODE] === 'regexp') {\n      this.match = (botresponse, utterance) => (new RegExp(utterance, 'i')).test(botresponse)\n    } else if (this.caps[Capabilities.SCRIPTING_MATCHING_MODE] === 'include') {\n      this.match = (botresponse, utterance) => botresponse.indexOf(utterance) >= 0\n    } else if (this.caps[Capabilities.SCRIPTING_MATCHING_MODE] === 'includeLowerCase') {\n      this.match = (botresponse, utterance) => botresponse.toLowerCase().indexOf(utterance.toLowerCase()) >= 0\n    } else {\n      this.match = (botresponse, utterance) => botresponse === utterance\n    }\n  }\n\n  Compile (scriptBuffer, scriptFormat, scriptType) {\n    let compiler = this.GetCompiler(scriptFormat)\n    return compiler.Compile(scriptBuffer, scriptType)\n  }\n\n  Decompile (convos, scriptFormat) {\n    let compiler = this.GetCompiler(scriptFormat)\n    return compiler.Decompile(convos)\n  }\n\n  GetCompiler (scriptFormat) {\n    const result = this.compilers[scriptFormat]\n    if (result) return result\n    throw new Error(`No compiler found for scriptFormat ${scriptFormat}`)\n  }\n\n  ReadScriptsFromDirectory (convoDir) {\n    const filelist = glob.sync(globPattern, { cwd: convoDir })\n    debug(`ReadConvosFromDirectory(${convoDir}) found filenames: ${filelist}`)\n\n    filelist.forEach((filename) => {\n      this.ReadScript(convoDir, filename)\n    })\n    debug(`ReadConvosFromDirectory(${convoDir}) found convos:\\n ${this.convos ? this.convos.join('\\n') : 'none'}`)\n    debug(`ReadConvosFromDirectory(${convoDir}) found utterances:\\n ${this.utterances ? _.map(this.utterances, (u) => u).join('\\n') : 'none'}`)\n  }\n\n  ReadScript (convoDir, filename) {\n    let fileConvos = []\n\n    const scriptBuffer = fs.readFileSync(path.resolve(convoDir, filename))\n\n    if (filename.endsWith('.xlsx')) {\n      this.Compile(scriptBuffer, Constants.SCRIPTING_FORMAT_XSLX, Constants.SCRIPTING_TYPE_UTTERANCES)\n      fileConvos = this.Compile(scriptBuffer, Constants.SCRIPTING_FORMAT_XSLX, Constants.SCRIPTING_TYPE_CONVO)\n    } else if (filename.endsWith('.convo.txt')) {\n      fileConvos = this.Compile(scriptBuffer, Constants.SCRIPTING_FORMAT_TXT, Constants.SCRIPTING_TYPE_CONVO)\n    } else if (filename.endsWith('.utterances.txt')) {\n      this.Compile(scriptBuffer, Constants.SCRIPTING_FORMAT_TXT, Constants.SCRIPTING_TYPE_UTTERANCES)\n    }\n    if (fileConvos) {\n      fileConvos.forEach((fileConvo) => {\n        fileConvo.sourceTag = filename\n        if (!fileConvo.header.name) {\n          fileConvo.header.name = filename\n        }\n      })\n    }\n  }\n\n  ExpandConvos () {\n    const expandedConvos = []\n    this.convos.forEach((convo) => {\n      this._expandConvo(expandedConvos, convo)\n    })\n    this.convos = expandedConvos\n    this._sortConvos()\n  }\n\n  _expandConvo (expandedConvos, currentConvo, convoStepIndex = 0, convoStepsStack = []) {\n    if (convoStepIndex < currentConvo.conversation.length) {\n      const currentStep = currentConvo.conversation[convoStepIndex]\n      if (currentStep.sender === 'bot') {\n        const currentStepsStack = convoStepsStack.slice()\n        currentStepsStack.push(Object.assign({}, currentStep))\n        this._expandConvo(expandedConvos, currentConvo, convoStepIndex + 1, currentStepsStack)\n      } else if (currentStep.sender === 'me') {\n        if (currentStep.messageText) {\n          const parts = currentStep.messageText.split(' ')\n          const uttName = parts[0]\n          const uttArgs = parts.slice(1)\n          if (this.utterances[uttName]) {\n            this.utterances[uttName].utterances.forEach((utt) => {\n              const currentStepsStack = convoStepsStack.slice()\n              if (uttArgs) {\n                utt = util.format(utt, ...uttArgs)\n              }\n              currentStepsStack.push(Object.assign({}, currentStep, { messageText: utt }))\n              this._expandConvo(expandedConvos, currentConvo, convoStepIndex + 1, currentStepsStack)\n            })\n            return\n          }\n        }\n        const currentStepsStack = convoStepsStack.slice()\n        currentStepsStack.push(Object.assign({}, currentStep))\n        this._expandConvo(expandedConvos, currentConvo, convoStepIndex + 1, currentStepsStack)\n      }\n    } else {\n      expandedConvos.push(new Convo(this, Object.assign({}, currentConvo, { conversation: convoStepsStack })))\n    }\n  }\n\n  _sortConvos () {\n    this.convos = _.sortBy(this.convos, [(convo) => convo.header.name])\n    let i = 0\n    this.convos.forEach((convo) => { convo.header.order = ++i })\n  }\n\n  AddConvos (convos) {\n    if (convos && _.isArray(convos)) {\n      this.convos = _.concat(this.convos, convos)\n    } else if (convos) {\n      this.convos.push(convos)\n    }\n    this._sortConvos()\n  }\n\n  AddUtterances (utterances) {\n    if (utterances && !_.isArray(utterances)) {\n      utterances = [ utterances ]\n    }\n    if (utterances) {\n      _.forEach(utterances, (utt) => {\n        let eu = this.utterances[utt.name]\n        if (eu) {\n          eu.utterances = _.uniq(_.concat(eu.utterances, utt.utterances))\n        } else {\n          this.utterances[utt.name] = utt\n        }\n      })\n    }\n  }\n}\n","module.exports = class BaseRepo {\n  constructor (tempDirectory, sources) {\n    this.tempDirectory = tempDirectory\n    this.sources = Object.assign({}, sources)\n    this.workingDirectory = null\n  }\n\n  Validate () {\n    return Promise.resolve()\n  }\n\n  Prepare () {\n    return Promise.resolve()\n  }\n\n  _AssertSourceExists (source) {\n    if (!this.sources[source]) {\n      throw new Error(`Source property ${source} not set`)\n    }\n  }\n}\n","const BaseRepo = require('./BaseRepo')\n\nmodule.exports = class NoRepo extends BaseRepo {\n  Validate () {\n    return super.Validate()\n  }\n\n  Prepare () {\n    return super.Prepare()\n  }\n}\n","const util = require('util')\nconst childProcess = require('child_process')\nconst _ = require('lodash')\nconst debug = require('debug')('botium-ProcessUtils')\n\nmodule.exports = {\n  childCommandLineRun: (cmd, ignoreErrors = false, processOptions = {}) => {\n    const cmdOptions = cmd.split(' ')\n    const cmdPart = cmdOptions[0]\n    cmdOptions.splice(0, 1)\n    return module.exports.childProcessRun(cmdPart, cmdOptions, ignoreErrors, processOptions)\n  },\n\n  childProcessRun: (cmd, cmdOptions, ignoreErrors = false, processOptions = {}) => {\n    return new Promise((resolve, reject) => {\n      debug('Running Command: ' + cmd + ' ' + _.join(cmdOptions, ' '))\n\n      var runningProcess = childProcess.spawn(cmd, cmdOptions, processOptions)\n\n      var stdout = []\n      var stderr = []\n\n      runningProcess.stdout.on('data', (data) => {\n        if (data) {\n          debug(`${cmd} STDOUT: ${data}`)\n          stdout.push(data)\n        }\n      })\n      runningProcess.stderr.on('data', (data) => {\n        if (data) {\n          debug(`${cmd} STDERR: ${data}`)\n          stderr.push(data)\n        }\n      })\n      runningProcess.on('close', (code) => {\n        debug(cmd + ' exited with code ' + code)\n        if (code === 0 || ignoreErrors) {\n          resolve({ stdout, stderr })\n        } else {\n          reject(new Error(`${cmd} returned error code ${code}`))\n        }\n      })\n      runningProcess.on('error', (err) => {\n        if (ignoreErrors) {\n          resolve()\n        } else {\n          reject(new Error(`${cmd} failed: ${util.inspect(err)}`))\n        }\n      })\n    })\n  }\n}\n","const path = require('path')\nconst async = require('async')\nconst mkdirp = require('mkdirp')\nconst debug = require('debug')('botium-GitRepo')\n\nconst Source = require('../Source')\nconst BaseRepo = require('./BaseRepo')\nconst ProcessUtils = require('../helpers/ProcessUtils')\n\nmodule.exports = class GitRepo extends BaseRepo {\n  Validate () {\n    return super.Validate().then(() => {\n      this._AssertSourceExists(Source.GITPATH)\n      this._AssertSourceExists(Source.GITURL)\n      this._AssertSourceExists(Source.GITBRANCH)\n      this._AssertSourceExists(Source.GITDIR)\n    })\n  }\n\n  Prepare () {\n    return new Promise((resolve, reject) => {\n      async.series([\n\n        (cloneDirectoryCreated) => {\n          this.workingDirectory = path.resolve(this.tempDirectory, 'git')\n\n          mkdirp(this.workingDirectory, (err) => {\n            if (err) {\n              return cloneDirectoryCreated(new Error(`Unable to create clone directory ${this.workingDirectory}: ${err}`))\n            }\n            cloneDirectoryCreated()\n          })\n        },\n\n        (cloneReady) => {\n          const gitCmdOptions = [\n            'clone',\n            '-b',\n            this.sources[Source.GITBRANCH],\n            '--single-branch',\n            '--depth',\n            '1',\n            this.sources[Source.GITURL],\n            this.workingDirectory\n          ]\n          ProcessUtils.childProcessRun(this.sources[Source.GITPATH], gitCmdOptions, false, { cwd: this.workingDirectory })\n            .then(() => cloneReady())\n            .catch(cloneReady)\n        },\n\n        (workingDirectoryChanged) => {\n          this.workingDirectory = path.resolve(this.workingDirectory, this.sources[Source.GITDIR])\n          workingDirectoryChanged()\n        },\n\n        (prepareReady) => {\n          if (this.sources[Source.GITPREPARECMD]) {\n            ProcessUtils.childCommandLineRun(this.sources[Source.GITPREPARECMD], false, { cwd: this.workingDirectory })\n              .then(() => prepareReady())\n              .catch(prepareReady)\n          } else {\n            prepareReady()\n          }\n        }\n\n      ], (err) => {\n        if (err) {\n          return reject(err)\n        }\n        debug(`git checkout out to ${this.workingDirectory}`)\n        resolve()\n      })\n    })\n  }\n}\n","const fs = require('fs')\nconst path = require('path')\nconst Source = require('../Source')\nconst BaseRepo = require('./BaseRepo')\n\nmodule.exports = class LocalRepo extends BaseRepo {\n  Validate () {\n    return super.Validate().then(() => {\n      this._AssertSourceExists(Source.LOCALPATH)\n\n      const checkPath = this.sources[Source.LOCALPATH]\n      fs.stat(checkPath, (err, stats) => {\n        if (err) {\n          throw new Error(`${checkPath} not available: ${err}`)\n        }\n        if (stats.isDirectory() && !stats.isSymbolicLink()) {\n          fs.access(checkPath, fs.constants.W_OK, (err1) => {\n            if (err) {\n              throw new Error(`${checkPath} not writeable: ${err}`)\n            }\n          })\n        } else {\n          throw new Error(`${checkPath} not a regular directory`)\n        }\n      })\n    })\n  }\n\n  Prepare () {\n    // No need to prepare anything\n    this.workingDirectory = path.resolve(this.sources[Source.LOCALPATH])\n    return Promise.resolve()\n  }\n}\n","module.exports = {\n  BUILD_CONTAINER: 'BUILD_CONTAINER',\n  START_CONTAINER: 'START_CONTAINER',\n  SENDTOBOT: 'SENDTOBOT',\n  STOP_CONTAINER: 'STOP_CONTAINER',\n  CLEAN_CONTAINER: 'CLEAN_CONTAINER'\n}\n","module.exports = class QueueTimeoutError extends Error {\r\n  constructor (timeoutMillis) {\r\n    super(`Queue.pop timeout after ${timeoutMillis}`)\r\n  }\r\n}\r\n","const async = require('async')\r\nconst util = require('util')\r\n\r\nconst QueueTimeoutError = require('./QueueTimeoutError')\r\n\r\nmodule.exports = class Queue {\r\n  constructor () {\r\n    this.queue = []\r\n    this.listeners = []\r\n    this.pushListener = null\r\n  }\r\n\r\n  clear () {\r\n    this.queue = []\r\n    this.listeners = []\r\n  }\r\n\r\n  push (msg) {\r\n    if (this.pushListener) {\r\n      this.pushListener(msg)\r\n    }\r\n\r\n    if (this.listeners.length > 0) {\r\n      this.listeners.shift()(msg)\r\n    } else {\r\n      this.queue.push(msg)\r\n    }\r\n  }\r\n\r\n  pop (timeoutMillis) {\r\n    if (this.queue.length > 0) {\r\n      return Promise.resolve(this.queue.shift())\r\n    }\r\n    return new Promise((resolve, reject) => {\r\n      let listener = null\r\n      const timeoutRequest = async.timeout((timeoutCallback) => {\r\n        listener = (msg) => {\r\n          timeoutCallback(null, msg)\r\n        }\r\n        this.listeners.push(listener)\r\n      }, timeoutMillis)\r\n\r\n      timeoutRequest((err, msg) => {\r\n        if (err && err.code === 'ETIMEDOUT') {\r\n          this.listeners.splice(this.listeners.indexOf(listener), 1)\r\n          reject(new QueueTimeoutError(timeoutMillis))\r\n        } else if (err) {\r\n          this.listeners.splice(this.listeners.indexOf(listener), 1)\r\n          reject(new Error(`Queue pop error ${util.inspect(err)}`))\r\n        } else {\r\n          resolve(msg)\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  registerPushListener (callback) {\r\n    this.pushListener = callback\r\n  }\r\n}\r\n","const util = require('util')\nconst async = require('async')\nconst rimraf = require('rimraf')\nconst debug = require('debug')('botium-BaseContainer')\n\nconst Events = require('../Events')\nconst Capabilities = require('../Capabilities')\nconst Queue = require('../helpers/Queue')\nconst BotiumMockMessage = require('../mocks/BotiumMockMessage')\n\nmodule.exports = class BaseContainer {\n  constructor (eventEmitter, tempDirectory, repo, caps, envs) {\n    this.eventEmitter = eventEmitter\n    this.repo = repo\n    this.caps = Object.assign({}, caps)\n    this.envs = Object.assign({}, envs)\n    this.tempDirectory = tempDirectory\n    this.cleanupTasks = []\n    this.queues = {}\n  }\n\n  Validate () {\n    return Promise.resolve()\n  }\n\n  Build () {\n    return Promise.resolve(this)\n  }\n\n  Start () {\n    this.queues = {}\n    return Promise.resolve(this)\n  }\n\n  UserSaysText (text) {\n    const mockMsg = new BotiumMockMessage({ sender: 'me', messageText: text })\n    return this.UserSays(mockMsg)\n  }\n\n  UserSays (msgMock) {\n    return Promise.resolve(this)\n  }\n\n  WaitBotSays (channel = null, timeoutMillis = null) {\n    if (!channel) channel = 'default'\n    if (!timeoutMillis) timeoutMillis = this.caps[Capabilities.WAITFORBOTTIMEOUT]\n\n    if (!this.queues[channel]) {\n      this.queues[channel] = new Queue()\n    }\n\n    return new Promise((resolve, reject) => {\n      this.queues[channel].pop(timeoutMillis)\n        .then((botMsg) => {\n          resolve(botMsg)\n        })\n        .catch((err) => {\n          debug(`WaitBotSays error ${util.inspect(err)}`)\n          resolve()\n        })\n    })\n  }\n\n  WaitBotSaysText (channel = null, timeoutMillis = null) {\n    return new Promise((resolve, reject) => {\n      this.WaitBotSays(channel, timeoutMillis)\n        .then((botMsg) => {\n          if (botMsg) {\n            resolve(botMsg.messageText)\n          } else {\n            resolve()\n          }\n        })\n        .catch((err) => {\n          debug(`WaitBotSaysText error ${util.inspect(err)}`)\n          resolve()\n        })\n    })\n  }\n\n  Restart () {\n    return new Promise((resolve, reject) => {\n      this.Stop()\n        .then(() => this.Start())\n        .then(() => resolve())\n        .catch((err) => reject(err))\n    })\n  }\n\n  Stop () {\n    return Promise.resolve(this)\n  }\n\n  Clean () {\n    return new Promise((resolve, reject) => {\n      async.series([\n\n        (rimraffed) => {\n          if (this.caps[Capabilities.CLEANUPTEMPDIR]) {\n            rimraf(this.tempDirectory, (err) => {\n              if (err) debug(`Cleanup temp dir ${this.tempDirectory} failed: ${util.inspect(err)}`)\n              rimraffed()\n            })\n          } else {\n            rimraffed()\n          }\n        },\n\n        (cleanupTasksDone) => {\n          if (this.cleanupTasks) {\n            async.series(\n              this.cleanupTasks.map((task) => {\n                return (cb) => {\n                  task((err) => {\n                    if (err) debug(`Cleanup failed: ${util.inspect(err)}`)\n                    cb()\n                  })\n                }\n              }),\n              () => {\n                cleanupTasksDone()\n              }\n            )\n          } else {\n            cleanupTasksDone()\n          }\n        }\n\n      ], (err) => {\n        if (err) {\n          return reject(new Error(`Cleanup failed ${util.inspect(err)}`))\n        }\n        resolve()\n      })\n    })\n  }\n\n  _AssertCapabilityExists (cap) {\n    if (!this.caps[cap]) {\n      throw new Error(`Capability property ${cap} not set`)\n    }\n  }\n\n  _AssertOneCapabilityExists () {\n    const checkCaps = [...arguments]\n    const found = checkCaps.find((cap) => this.caps[cap])\n    if (!found) {\n      throw new Error(`Capability property of ${checkCaps.join()} not set`)\n    }\n  }\n\n  _QueueBotSays (botMsg) {\n    if (!botMsg.channel) botMsg.channel = 'default'\n    if (!botMsg.sender) botMsg.sender = 'bot'\n\n    if (!this.queues[botMsg.channel]) {\n      this.queues[botMsg.channel] = new Queue()\n    }\n\n    this.queues[botMsg.channel].push(botMsg)\n    this.eventEmitter.emit(Events.MESSAGE_RECEIVEDFROMBOT, this, botMsg)\n  }\n}\n","const util = require('util')\nconst async = require('async')\nconst io = require('socket.io-client')\nconst debug = require('debug')('botium-GridContainer')\n\nconst Commands = require('../Commands')\nconst Events = require('../Events')\nconst Capabilities = require('../Capabilities')\nconst BaseContainer = require('./BaseContainer')\nconst BotiumMockMessage = require('../mocks/BotiumMockMessage')\n\nmodule.exports = class GridContainer extends BaseContainer {\n  Validate () {\n    return super.Validate().then(() => {\n      this._AssertCapabilityExists(Capabilities.BOTIUMGRIDURL)\n    })\n  }\n\n  Build () {\n    this.buildPromise = this._defer()\n\n    async.series([\n      (baseComplete) => {\n        super.Build().then(() => baseComplete()).catch(baseComplete)\n      },\n\n      (socketComplete) => {\n        this.socket = io(this.caps[Capabilities.BOTIUMGRIDURL])\n\n        this.socket.on('connect', () => {\n          debug('connected')\n          this.socket.emit('authentication', { apiToken: this.caps[Capabilities.BOTIUMAPITOKEN] })\n        })\n        this.socket.on('connect_error', (err) => {\n          debug(`connect_error ${util.inspect(err)}`)\n        })\n        this.socket.on('connect_timeout', (timeout) => {\n          debug(`connect_timeout ${util.inspect(timeout)}`)\n        })\n        this.socket.on('error', (err) => {\n          debug(`error ${util.inspect(err)}`)\n        })\n        this.socket.on('authenticated', () => {\n          debug('authenticated')\n          this.socket.emit(Commands.BUILD_CONTAINER, this.caps, this.repo.sources, this.envs)\n        })\n        this.socket.on('unauthorized', (err) => {\n          debug(`unauthorized ${util.inspect(err)}`)\n          socketComplete(`Grid Access not authorized: ${util.inspect(err)}`)\n        })\n        this.socket.on(Events.TOOMUCHWORKERS_ERROR, (err) => {\n          debug(`TOOMUCHWORKERS_ERROR ${util.inspect(err)}`)\n          socketComplete(`Grid Access not possible: ${util.inspect(err)}`)\n        })\n        this.socket.on(Events.CONTAINER_BUILT, () => {\n          debug(Events.CONTAINER_BUILT)\n          socketComplete()\n        })\n        this.socket.on(Events.CONTAINER_BUILD_ERROR, (err) => {\n          debug(`CONTAINER_BUILD_ERROR ${util.inspect(err)}`)\n          socketComplete(`Grid Build failed: ${util.inspect(err)}`)\n        })\n\n        this.socket.on(Events.CONTAINER_STARTED, () => {\n          debug(Events.CONTAINER_STARTED)\n          this.eventEmitter.emit(Events.CONTAINER_STARTED, this)\n          if (this.startPromise) {\n            this.startPromise.resolve(this)\n            this.startPromise = null\n          }\n        })\n        this.socket.on(Events.CONTAINER_START_ERROR, (err) => {\n          debug(`CONTAINER_START_ERROR ${util.inspect(err)}`)\n          this.eventEmitter.emit(Events.CONTAINER_START_ERROR, this, err)\n          if (this.startPromise) {\n            this.startPromise.reject(`Grid Start failed: ${util.inspect(err)}`)\n            this.startPromise = null\n          }\n        })\n\n        this.socket.on(Events.MESSAGE_RECEIVEDFROMBOT, (botMsg) => {\n          debug(`MESSAGE_RECEIVEDFROMBOT ${util.inspect(botMsg)}`)\n          this._QueueBotSays(new BotiumMockMessage(botMsg))\n        })\n\n        this.socket.on(Events.CONTAINER_STOPPED, () => {\n          debug(Events.CONTAINER_STOPPED)\n          this.eventEmitter.emit(Events.CONTAINER_STOPPED, this)\n          if (this.stopPromise) {\n            this.stopPromise.resolve(this)\n            this.stopPromise = null\n          }\n        })\n        this.socket.on(Events.CONTAINER_STOP_ERROR, (err) => {\n          debug(`CONTAINER_STOP_ERROR ${util.inspect(err)}`)\n          this.eventEmitter.emit(Events.CONTAINER_STOP_ERROR, this, err)\n          if (this.stopPromise) {\n            this.stopPromise.reject(`Grid Stop failed: ${util.inspect(err)}`)\n            this.stopPromise = null\n          }\n        })\n\n        this.socket.on(Events.CONTAINER_CLEANED, () => {\n          debug(Events.CONTAINER_CLEANED)\n          this.eventEmitter.emit(Events.CONTAINER_CLEANED, this)\n          if (this.cleanPromise) {\n            this.cleanPromise.resolve(this)\n            this.cleanPromise = null\n          }\n          this.socket.disconnect()\n          this.socket = null\n        })\n        this.socket.on(Events.CONTAINER_CLEAN_ERROR, (err) => {\n          debug(`CONTAINER_CLEAN_ERROR ${JSON.stringify(err)}`)\n          this.eventEmitter.emit(Events.CONTAINER_CLEAN_ERROR, this, err)\n          if (this.cleanPromise) {\n            this.cleanPromise.reject(`Grid Clean failed: ${util.inspect(err)}`)\n            this.cleanPromise = null\n          }\n          this.socket.disconnect()\n          this.socket = null\n        })\n      }\n    ], (err) => {\n      if (err) {\n        this.buildPromise.reject(new Error(`Cannot build docker containers: ${util.inspect(err)}`))\n      } else {\n        this.buildPromise.resolve(this)\n      }\n      this.buildPromise = null\n    })\n    return this.buildPromise.promise\n  }\n\n  Start () {\n    this.eventEmitter.emit(Events.CONTAINER_STARTING, this)\n\n    return super.Start().then(() => {\n      if (this.startPromise) return Promise.reject(new Error('already starting'))\n      if (this.socket) {\n        this.startPromise = this._defer()\n        this.socket.emit(Commands.START_CONTAINER)\n\n        return this.startPromise.promise\n      } else {\n        this.eventEmitter.emit(Events.CONTAINER_START_ERROR, this, 'Remote Agent not online')\n        return Promise.reject(new Error('Remote Agent not online'))\n      }\n    })\n  }\n\n  UserSays (mockMsg) {\n    return new Promise((resolve, reject) => {\n      if (this.socket) {\n        this.socket.emit(Commands.SENDTOBOT, mockMsg)\n        this.eventEmitter.emit(Events.MESSAGE_SENTTOBOT, this, mockMsg)\n        resolve(this)\n      } else {\n        this.eventEmitter.emit(Events.MESSAGE_SENDTOBOT_ERROR, this, 'Remote Agent not online')\n        reject(new Error('Remote Agent not online'))\n      }\n    })\n  }\n\n  Stop () {\n    this.eventEmitter.emit(Events.CONTAINER_STOPPING, this)\n\n    return super.Stop().then(() => {\n      if (this.stopPromise) return Promise.reject(new Error('already stopping'))\n      if (this.socket) {\n        this.stopPromise = this._defer()\n        this.socket.emit(Commands.STOP_CONTAINER)\n\n        return this.stopPromise.promise\n      } else {\n        return Promise.resolve(this)\n      }\n    })\n  }\n\n  Clean () {\n    this.eventEmitter.emit(Events.CONTAINER_CLEANING, this)\n\n    return super.Clean().then(() => {\n      if (this.cleanPromise) return Promise.reject(new Error('already cleaning'))\n      if (this.socket) {\n        this.cleanPromise = this._defer()\n        this.socket.emit(Commands.CLEAN_CONTAINER)\n\n        return this.cleanPromise.promise\n      } else {\n        return Promise.resolve(this)\n      }\n    })\n  }\n\n  _defer () {\n    const deferred = {\n      promise: null,\n      resolve: null,\n      reject: null\n    }\n    deferred.promise = new Promise((resolve, reject) => {\n      deferred.resolve = resolve\n      deferred.reject = reject\n    })\n    return deferred\n  }\n}\n","const async = require('async')\nconst randomize = require('randomatic')\nconst slug = require('slug')\nconst _ = require('lodash')\n\nconst ProcessUtils = require('../helpers/ProcessUtils')\n\nmodule.exports = class DockerCmd {\n  constructor ({ projectname, dockercomposepath, uniquecontainernames, composefiles }) {\n    this.projectname = projectname\n    this.dockercomposepath = dockercomposepath\n    this.composefiles = composefiles\n    if (uniquecontainernames) {\n      this.containername = slug(`${this.projectname} ${randomize('Aa0', 5)}`)\n    } else {\n      this.containername = slug(`${this.projectname}`)\n    }\n  }\n\n  setupContainer () {\n    let _this = this\n    return new Promise((resolve, reject) => {\n      async.series([\n        (stopDone) => {\n          _this.stopContainer(true).then(() => stopDone()).catch(() => stopDone())\n        },\n        (teardownDone) => {\n          _this.teardownContainer(true).then(() => teardownDone()).catch(() => teardownDone())\n        },\n        (buildContainerDone) => {\n          let cmdOptions = _this._dockerComposeCmdOptions()\n          cmdOptions.push('build')\n\n          _this._dockerComposeRun(cmdOptions, false).then(() => buildContainerDone()).catch(buildContainerDone)\n        }\n      ],\n      (err) => {\n        if (err) return reject(err)\n        resolve()\n      })\n    })\n  }\n\n  teardownContainer (ignoreErrors) {\n    var cmdOptions = this._dockerComposeCmdOptions()\n    cmdOptions.push('down')\n\n    return this._dockerComposeRun(cmdOptions, ignoreErrors)\n  }\n\n  startContainer () {\n    var cmdOptions = this._dockerComposeCmdOptions()\n    cmdOptions.push('up')\n    cmdOptions.push('-d')\n\n    return this._dockerComposeRun(cmdOptions, false)\n  }\n\n  stopContainer (ignoreErrors) {\n    var cmdOptions = this._dockerComposeCmdOptions()\n    cmdOptions.push('kill')\n\n    return this._dockerComposeRun(cmdOptions, ignoreErrors)\n  }\n\n  // Private Functions\n\n  _dockerComposeCmdOptions () {\n    var cmdOptions = []\n    cmdOptions.push('-p')\n    cmdOptions.push(this.containername)\n    if (process.env.DEBUG && process.env.DEBUG.indexOf('DockerCmdVerbose') >= 0) {\n      cmdOptions.push('--verbose')\n    }\n\n    _.forEach(this.composefiles, (composefile) => {\n      cmdOptions.push('-f')\n      cmdOptions.push(composefile)\n    })\n    return cmdOptions\n  }\n\n  _dockerComposeRun (cmdOptions, ignoreErrors) {\n    return ProcessUtils.childProcessRun(this.dockercomposepath, cmdOptions, ignoreErrors)\n  }\n}\n","const async = require('async')\nconst tcpPortUsed = require('tcp-port-used')\nconst debug = require('debug')('botium-TcpPortUtils')\n\nmodule.exports = {\n  WaitForPort: (hostname, portToCheck) => {\n    return new Promise((resolve, reject) => {\n      let online = false\n      async.until(\n        () => online,\n        (callback) => {\n          debug(`WaitForPort checking port usage ${hostname}:${portToCheck} before proceed`)\n\n          tcpPortUsed.check(portToCheck, hostname)\n            .then((inUse) => {\n              debug(`WaitForPort port usage (${hostname}:${portToCheck}): ${inUse}`)\n              if (inUse) {\n                online = true\n                callback()\n              } else {\n                setTimeout(callback, 2000)\n              }\n            }, (err) => {\n              debug(`WaitForPort error on port check ${hostname}:${portToCheck}: ${err}`)\n              setTimeout(callback, 2000)\n            })\n        },\n        (err) => {\n          if (err) return reject(err)\n          resolve()\n        })\n    })\n  },\n\n  GetFreePortInRange: (hostname, portRange) => {\n    return new Promise((resolve, reject) => {\n      const rangeExpression = /^([0-9]+)-([0-9]+)$/\n      const rangeMatch = portRange.match(rangeExpression)\n      if (!rangeMatch || rangeMatch.length !== 3) {\n        return reject(new Error(`GetFreePortInRange Not a port range expression \"${portRange}\", expected portFrom-portTo`))\n      }\n      let found = false\n      let portToCheck = parseInt(rangeMatch[1])\n      let portToCheckMax = parseInt(rangeMatch[2])\n      async.until(\n        () => found || portToCheck > portToCheckMax,\n        (callback) => {\n          debug(`GetFreePortInRange checking port usage ${hostname}:${portToCheck} before proceed`)\n\n          tcpPortUsed.check(portToCheck, hostname)\n            .then((inUse) => {\n              debug(`GetFreePortInRange port usage (${hostname}:${portToCheck}): ${inUse}`)\n              if (inUse) {\n                portToCheck++\n                callback()\n              } else {\n                found = true\n                callback()\n              }\n            }, (err) => {\n              debug(`GetFreePortInRange error on port check ${hostname}:${portToCheck}: ${err}`)\n              portToCheck++\n              callback()\n            })\n        },\n        (err) => {\n          if (err) return reject(err)\n          if (!found) return reject(new Error(`GetFreePortInRange no free port found in range ${portRange}`))\n          resolve(portToCheck)\n        })\n    })\n  }\n}\n","const fs = require('fs')\r\n\r\nmodule.exports = (src, dest) => {\r\n  return new Promise((resolve, reject) => {\r\n    fs.readFile(src, (err, data) => {\r\n      if (err) return reject(new Error(`read file ${src} failed: ${err}`))\r\n      fs.writeFile(dest, data, (err) => {\r\n        if (err) return reject(new Error(`write file ${dest} failed: ${err}`))\r\n        resolve()\r\n      })\r\n    })\r\n  })\r\n}\r\n","module.exports = {\r\n  MOCKCMD_SENDTOBOT: 'MOCKCMD_SENDTOBOT',\r\n  MOCKCMD_RECEIVEDFROMBOT: 'MOCKCMD_RECEIVEDFROMBOT'\r\n}\r\n","const fs = require('fs')\nconst util = require('util')\nconst path = require('path')\nconst findRoot = require('find-root')\nconst async = require('async')\nconst request = require('request')\nconst io = require('socket.io-client')\nconst copydir = require('copy-dir')\nconst _ = require('lodash')\nconst debug = require('debug')('botium-DockerMocks')\n\nconst TcpPortUtils = require('../helpers/TcpPortUtils')\nconst Capabilities = require('../Capabilities')\nconst Events = require('../Events')\nconst ProcessUtils = require('../helpers/ProcessUtils')\nconst SafeFileCopy = require('../helpers/SafeFileCopy')\nconst BotiumMockMessage = require('../mocks/BotiumMockMessage')\nconst BotiumMockCommand = require('../mocks/BotiumMockCommand')\n\nconst botiumPackageRootDir = findRoot()\n\nclass BaseMock {\n  constructor () {\n    this.publishPort = null\n    this.publishIp = null\n    this.capNamePublishPort = null\n    this.capNamePublishPortRange = null\n    this.mockDir = null\n    this.packageDir = null\n    this.initCommand = null\n    this.dockerFile = null\n    this.dockerComposeFile = null\n  }\n\n  SelectPublishPort (publishIp, caps) {\n    this.publishIp = publishIp\n    if (caps[this.capNamePublishPort]) {\n      this.publishPort = caps[this.capNamePublishPort]\n      if (caps[Capabilities.BOTIUMGRIDSLOT]) {\n        this.publishPort += caps[Capabilities.BOTIUMGRIDSLOT]\n      }\n      return Promise.resolve()\n    } else {\n      return new Promise((resolve, reject) => {\n        TcpPortUtils.GetFreePortInRange(this.publishIp, caps[this.capNamePublishPortRange])\n          .then((port) => {\n            this.publishPort = port\n            resolve()\n          })\n          .catch(reject)\n      })\n    }\n  }\n\n  PrepareDocker (mockDir) {\n    this.mockDir = mockDir\n    return new Promise((resolve, reject) => {\n      async.series([\n        (packageCopied) => {\n          copydir(path.resolve(botiumPackageRootDir, this.packageDir), this.mockDir, (err) => {\n            if (err) return packageCopied(`Error copying mock to ${this.mockDir}: ${util.inspect(err)}`)\n            if (this.initCommand) {\n              ProcessUtils.childCommandLineRun(this.initCommand, false, { cwd: this.mockDir })\n                .then(() => packageCopied())\n                .catch(packageCopied)\n            } else {\n              packageCopied()\n            }\n          })\n        },\n\n        (dockerfileCopied) => {\n          const dockermockOverride = path.resolve(process.cwd(), this.dockerFile)\n          fs.stat(dockermockOverride, (err, stats) => {\n            if (!err && stats.isFile()) {\n              debug(`Docker file ${dockermockOverride} present, using it.`)\n\n              SafeFileCopy(dockermockOverride, path.resolve(this.mockDir, this.dockerFile))\n                .then(() => dockerfileCopied())\n                .catch((err) => dockerfileCopied(`Copying Docker file ${dockermockOverride} failed ${util.inspect(err)}`))\n            } else {\n              dockerfileCopied()\n            }\n          })\n        }\n      ], (err) => {\n        if (err) {\n          return reject(new Error(`PrepareDocker failed ${util.inspect(err)}`))\n        }\n        resolve()\n      })\n    })\n  }\n\n  GetDockerCompose () {\n    return new Promise((resolve) => {\n      const dockermockOverride = path.resolve(process.cwd(), this.dockerComposeFile)\n      fs.stat(dockermockOverride, (err, stats) => {\n        if (!err && stats.isFile()) {\n          debug(`Docker file ${dockermockOverride} present, using it.`)\n          resolve(dockermockOverride)\n        } else {\n          resolve(path.resolve(this.mockDir, this.dockerComposeFile))\n        }\n      })\n    })\n  }\n\n  Start (container) {\n    return new Promise((resolve, reject) => {\n      async.series([\n\n        (mockupOnline) => {\n          TcpPortUtils.WaitForPort(this.publishIp, this.publishPort)\n            .then(() => mockupOnline())\n            .catch(mockupOnline)\n        },\n\n        (endpointOnline) => {\n          this.mockUrl = `http://${this.publishIp}:${this.publishPort}`\n          let online = false\n          async.until(\n            () => online,\n            (callback) => {\n              var options = {\n                uri: this.mockUrl,\n                method: 'GET'\n              }\n              this.debug(`Mock - checking endpoint ${this.mockUrl} before proceed`)\n              request(options, (err, response, body) => {\n                if (err) {\n                  setTimeout(callback, 2000)\n                } else if (response && response.statusCode === 200) {\n                  this.debug(`Mock - endpoint ${this.mockUrl} is online`)\n                  online = true\n                  callback()\n                } else {\n                  setTimeout(callback, 2000)\n                }\n              })\n            },\n            endpointOnline\n          )\n        },\n\n        (socketStartDone) => {\n          if (this.socket) {\n            this.socket.disconnect()\n            this.socket = null\n          }\n\n          this.socket = io.connect(this.mockUrl)\n          this.socket.on(BotiumMockCommand.MOCKCMD_RECEIVEDFROMBOT, (botMsg) => {\n            this.debug(`Mock - socket received from bot ${util.inspect(botMsg)}`)\n            container._QueueBotSays(new BotiumMockMessage(botMsg))\n          })\n          this.socket.on('error', (err) => {\n            this.debug(`Mock - socket connection error! ${util.inspect(err)}`)\n          })\n          this.socket.on('connect', () => {\n            this.debug(`Mock - socket connected ${this.mockUrl}`)\n            container.eventEmitter.emit(Events.BOT_CONNECTED, this, this.socket)\n            socketStartDone()\n          })\n        }\n\n      ], (err) => {\n        if (err) {\n          return reject(new Error(`Start failed ${util.inspect(err)}`))\n        }\n        resolve()\n      })\n    })\n  }\n\n  Stop () {\n    return new Promise((resolve) => {\n      if (this.socket) {\n        this.socket.disconnect()\n        this.socket = null\n        this.debug('Socket disconnected')\n      }\n      resolve()\n    })\n  }\n}\n\nmodule.exports = {\n  Facebook: class FacebookMock extends BaseMock {\n    constructor () {\n      super()\n      this.capNamePublishPort = Capabilities.FACEBOOK_PUBLISHPORT\n      this.capNamePublishPortRange = Capabilities.FACEBOOK_PUBLISHPORT_RANGE\n      this.packageDir = 'src/mocks/facebook'\n      this.dockerFile = 'Dockerfile.fbmock'\n      this.dockerComposeFile = 'docker-compose.fbmock.yml'\n      this.debug = require('debug')('botium-FacebookMock')\n    }\n\n    FillDockerEnv (composeEnv, caps, logging) {\n      composeEnv.services['botium-fbmock'] = {\n        build: {\n          context: this.mockDir\n        },\n        logging: _.cloneDeep(logging),\n        volumes: [\n          `${this.mockDir}:/usr/src/app`\n        ],\n        ports: [\n          `${this.publishPort}:${this.publishPort}`\n        ],\n        environment: {\n          BOTIUM_FACEBOOK_WEBHOOKPORT: caps[Capabilities.FACEBOOK_WEBHOOK_PORT],\n          BOTIUM_FACEBOOK_WEBHOOKPATH: caps[Capabilities.FACEBOOK_WEBHOOK_PATH],\n          BOTIUM_FACEBOOK_PUBLISHPORT: this.publishPort,\n          BOTIUM_FACEBOOK_SENDDELIVERY: `${caps[Capabilities.FACEBOOK_SEND_DELIVERY_CONFIRMATION]}`\n        }\n      }\n    }\n  },\n  Slack: class SlackMock extends BaseMock {\n    constructor () {\n      super()\n      this.capNamePublishPort = Capabilities.SLACK_PUBLISHPORT\n      this.capNamePublishPortRange = Capabilities.SLACK_PUBLISHPORT_RANGE\n      this.packageDir = 'src/mocks/slack'\n      this.dockerFile = 'Dockerfile.slackmock'\n      this.dockerComposeFile = 'docker-compose.slackmock.yml'\n      this.debug = require('debug')('botium-SlackMock')\n    }\n\n    FillDockerEnv (composeEnv, caps, logging) {\n      composeEnv.services['botium-slackmock'] = {\n        build: {\n          context: this.mockDir\n        },\n        logging: _.cloneDeep(logging),\n        volumes: [\n          `${this.mockDir}:/usr/src/app`\n        ],\n        ports: [\n          `${this.publishPort}:${this.publishPort}`\n        ],\n        environment: {\n          BOTIUM_SLACK_EVENTPORT: caps[Capabilities.SLACK_EVENT_PORT],\n          BOTIUM_SLACK_EVENTPATH: caps[Capabilities.SLACK_EVENT_PATH],\n          BOTIUM_SLACK_OAUTHPORT: caps[Capabilities.SLACK_OAUTH_PORT],\n          BOTIUM_SLACK_OAUTHPATH: caps[Capabilities.SLACK_OAUTH_PATH],\n          BOTIUM_SLACK_PUBLISHPORT: this.publishPort\n        }\n      }\n    }\n  },\n  BotFramework: class BotFrameworkMock extends BaseMock {\n    constructor () {\n      super()\n      this.capNamePublishPort = Capabilities.BOTFRAMEWORK_PUBLISHPORT\n      this.capNamePublishPortRange = Capabilities.BOTFRAMEWORK_PUBLISHPORT_RANGE\n      this.packageDir = 'src/mocks/botframework'\n      this.dockerFile = 'Dockerfile.botframeworkmock'\n      this.dockerComposeFile = 'docker-compose.botframeworkmock.yml'\n      this.debug = require('debug')('botium-BotFrameworkMock')\n    }\n\n    FillDockerEnv (composeEnv, caps, logging) {\n      composeEnv.services['botium-botframeworkmock'] = {\n        build: {\n          context: this.mockDir\n        },\n        logging: _.cloneDeep(logging),\n        volumes: [\n          `${this.mockDir}:/usr/src/app`\n        ],\n        ports: [\n          `${this.publishPort}:${this.publishPort}`\n        ],\n        environment: {\n          BOTIUM_BOTFRAMEWORK_WEBHOOKPORT: caps[Capabilities.BOTFRAMEWORK_WEBHOOK_PORT],\n          BOTIUM_BOTFRAMEWORK_WEBHOOKPATH: caps[Capabilities.BOTFRAMEWORK_WEBHOOK_PATH],\n          BOTIUM_BOTFRAMEWORK_APP_ID: caps[Capabilities.BOTFRAMEWORK_APP_ID],\n          BOTIUM_BOTFRAMEWORK_CHANNEL_ID: caps[Capabilities.BOTFRAMEWORK_CHANNEL_ID],\n          BOTIUM_BOTFRAMEWORK_PUBLISHPORT: this.publishPort\n        }\n      }\n    }\n  }\n}\n","const dgram = require('dgram')\nconst EventEmitter = require('events')\n\nfunction createErrorObject (err, message) {\n  return {\n    date: new Date(),\n    error: err,\n    message: message\n  }\n}\n\nmodule.exports = class SyslogServer extends EventEmitter {\n  constructor () {\n    super()\n    this.status = false\n    this.server = null\n  }\n\n  start (options = { port: 514, address: '0.0.0.0', exclusive: true }, cb) {\n    return new Promise((resolve, reject) => {\n      if (this.status === true) {\n        let errorObj = createErrorObject(null, 'NodeJS Syslog Server is already running!')\n        if (cb) return cb(errorObj)\n        return reject(errorObj)\n      } else {\n        this.server = dgram.createSocket('udp4')\n\n        // Socket listening handler\n        this.server.on('listening', () => {\n          this.status = true\n          this.emit('start')\n        })\n\n        // Socket error handler\n        this.server.on('error', (err) => {\n          this.emit('error', err)\n        })\n\n        // Socket message handler\n        this.server.on('message', (msg, remote) => {\n          let message = {\n            date: new Date(),\n            host: remote.address,\n            message: msg.toString('utf8'),\n            protocol: remote.family\n          }\n          this.emit('message', message)\n        })\n\n        // Socket close handler\n        this.server.on('close', () => {\n          this.status = false\n          this.emit('stop')\n        })\n\n        this.server.bind(options, (err) => {\n          if (err) {\n            let errorObj = createErrorObject(err, 'NodeJS Syslog Server failed to start!')\n            if (cb) return cb(errorObj)\n            return reject(errorObj)\n          } else {\n            if (cb) return cb()\n            return resolve()\n          }\n        })\n      }\n    })\n  }\n\n  stop (cb) {\n    return new Promise((resolve, reject) => {\n      try {\n        this.server.close(() => {\n          if (cb) return cb()\n          return resolve()\n        })\n      } catch (err) {\n        let errorObj = createErrorObject(err, 'NodeJS Syslog Server is not running!')\n        if (cb) return cb(errorObj)\n        return reject(errorObj)\n      }\n    })\n  }\n\n  isRunning () {\n    return this.status\n  }\n}\n","const fs = require('fs')\nconst util = require('util')\nconst async = require('async')\nconst path = require('path')\nconst yaml = require('write-yaml')\nconst mustache = require('mustache')\nconst findRoot = require('find-root')\nconst _ = require('lodash')\nconst debug = require('debug')('botium-DockerContainer')\nconst debugContainerOutput = require('debug')('botium-DockerContainerOutput')\n\nconst Capabilities = require('../Capabilities')\nconst Events = require('../Events')\nconst BaseContainer = require('./BaseContainer')\nconst DockerCmd = require('./DockerCmd')\nconst DockerMocks = require('./DockerMocks')\nconst BotiumMockCommand = require('../mocks/BotiumMockCommand')\nconst TcpPortUtils = require('../helpers/TcpPortUtils')\nconst SyslogServer = require('../helpers/SyslogServer')\nconst ProcessUtils = require('../helpers/ProcessUtils')\nconst SafeFileCopy = require('../helpers/SafeFileCopy')\n\nconst botiumPackageRootDir = findRoot()\n\nmodule.exports = class DockerContainer extends BaseContainer {\n  Validate () {\n    return super.Validate().then(() => {\n      this._AssertCapabilityExists(Capabilities.DOCKERCOMPOSEPATH)\n      this._AssertCapabilityExists(Capabilities.STARTCMD)\n      this._AssertCapabilityExists(Capabilities.DOCKERIMAGE)\n      this._AssertOneCapabilityExists(Capabilities.DOCKERSYSLOGPORT, Capabilities.DOCKERSYSLOGPORT_RANGE)\n      if (this.caps[Capabilities.DOCKERMACHINE]) {\n        this._AssertCapabilityExists(Capabilities.DOCKERMACHINEPATH)\n      }\n      if (this.caps[Capabilities.FACEBOOK_API]) {\n        this._AssertCapabilityExists(Capabilities.FACEBOOK_WEBHOOK_PORT)\n        this._AssertCapabilityExists(Capabilities.FACEBOOK_WEBHOOK_PATH)\n        this._AssertOneCapabilityExists(Capabilities.FACEBOOK_PUBLISHPORT, Capabilities.FACEBOOK_PUBLISHPORT_RANGE)\n      }\n\n      if (this.caps[Capabilities.SLACK_API]) {\n        this._AssertCapabilityExists(Capabilities.SLACK_EVENT_PORT)\n        this._AssertCapabilityExists(Capabilities.SLACK_EVENT_PATH)\n        this._AssertCapabilityExists(Capabilities.SLACK_OAUTH_PORT)\n        this._AssertCapabilityExists(Capabilities.SLACK_OAUTH_PATH)\n        this._AssertOneCapabilityExists(Capabilities.SLACK_PUBLISHPORT, Capabilities.SLACK_PUBLISHPORT_RANGE)\n      }\n\n      if (this.caps[Capabilities.BOTFRAMEWORK_API]) {\n        this._AssertCapabilityExists(Capabilities.BOTFRAMEWORK_APP_ID)\n        this._AssertCapabilityExists(Capabilities.BOTFRAMEWORK_CHANNEL_ID)\n        this._AssertCapabilityExists(Capabilities.BOTFRAMEWORK_WEBHOOK_PORT)\n        this._AssertCapabilityExists(Capabilities.BOTFRAMEWORK_WEBHOOK_PATH)\n        this._AssertOneCapabilityExists(Capabilities.BOTFRAMEWORK_PUBLISHPORT, Capabilities.BOTFRAMEWORK_PUBLISHPORT_RANGE)\n      }\n    })\n  }\n\n  Build () {\n    if (this.caps[Capabilities.FACEBOOK_API]) {\n      debug('Adding Facebook Mock to Docker compose')\n      this.fbMock = new DockerMocks.Facebook()\n    }\n    if (this.caps[Capabilities.SLACK_API]) {\n      debug('Adding Slack Mock to Docker compose')\n      this.slackMock = new DockerMocks.Slack()\n    }\n    if (this.caps[Capabilities.BOTFRAMEWORK_API]) {\n      debug('Adding BotFramework Mock to Docker compose')\n      this.botframeworkMock = new DockerMocks.BotFramework()\n    }\n\n    return new Promise((resolve, reject) => {\n      this.dockerConfig = {\n        projectname: this.caps[Capabilities.PROJECTNAME],\n        dockercomposepath: this.caps[Capabilities.DOCKERCOMPOSEPATH],\n        uniquecontainernames: this.caps[Capabilities.DOCKERUNIQUECONTAINERNAMES],\n        composefiles: []\n      }\n\n      async.series([\n\n        (baseComplete) => {\n          super.Build().then(() => baseComplete()).catch(baseComplete)\n        },\n\n        (dockerIpFound) => {\n          if (this.caps[Capabilities.DOCKERMACHINE]) {\n            ProcessUtils.childProcessRun(this.caps[Capabilities.DOCKERMACHINEPATH], [ 'ip' ], false)\n              .then((output) => {\n                if (output.stdout && output.stdout.length > 0) {\n                  this.dockerIp = `${output.stdout[0]}`.trim()\n                  if (this.dockerIp) {\n                    debug(`Found docker-machine ip ${this.dockerIp}.`)\n                    return dockerIpFound()\n                  }\n                }\n                dockerIpFound(`No docker-machine ip found in command output ${output}`)\n              }).catch(dockerIpFound)\n          } else {\n            this.dockerIp = '127.0.0.1'\n            dockerIpFound()\n          }\n        },\n\n        (dockerfileCreated) => {\n          const dockerfileBotium = path.resolve(this.repo.workingDirectory, 'Dockerfile.botium')\n          fs.stat(dockerfileBotium, (err, stats) => {\n            if (!err && stats.isFile()) {\n              debug(`Dockerfile ${dockerfileBotium} already present, using it.`)\n              dockerfileCreated()\n            } else {\n              const templateFile = path.resolve(botiumPackageRootDir, 'src', 'Dockerfile.botium.template')\n              fs.readFile(templateFile, 'utf8', (err, data) => {\n                if (err) return dockerfileCreated(`Reading docker template file ${templateFile} failed: ${err}`)\n                const viewData = {\n                  STARTCMD: this.caps[Capabilities.STARTCMD],\n                  DOCKERIMAGE: this.caps[Capabilities.DOCKERIMAGE]\n                }\n                const convertedFile = mustache.render(data, viewData)\n                fs.writeFile(dockerfileBotium, convertedFile, (err) => {\n                  if (err) return dockerfileCreated(`Writing dockerfile ${dockerfileBotium} failed: ${err}`)\n\n                  this.cleanupTasks.push((cb) => {\n                    fs.stat(dockerfileBotium, (err, stats) => {\n                      if (!err && stats.isFile()) {\n                        fs.unlink(dockerfileBotium, cb)\n                      } else {\n                        cb()\n                      }\n                    })\n                  })\n                  dockerfileCreated()\n                })\n              })\n            }\n          })\n        },\n\n        (dockercomposeMainUsed) => {\n          const dockercomposeMain = path.resolve(botiumPackageRootDir, 'src', 'docker-compose.botium.yml')\n          const dockercomposeBotium = path.resolve(this.tempDirectory, 'docker-compose.botium.yml')\n\n          SafeFileCopy(dockercomposeMain, dockercomposeBotium)\n            .then(() => {\n              this.dockerConfig.composefiles.push(dockercomposeBotium)\n              dockercomposeMainUsed()\n            })\n            .catch((err) => dockercomposeMainUsed(`Copying docker compose template file ${dockercomposeMain} failed: ${err}`))\n        },\n\n        (syslogPortSelected) => {\n          if (this.caps[Capabilities.DOCKERSYSLOGPORT]) {\n            this.syslogPort = this.caps[Capabilities.DOCKERSYSLOGPORT]\n            if (this.caps[Capabilities.BOTIUMGRIDSLOT]) {\n              this.publishPort += this.caps[Capabilities.BOTIUMGRIDSLOT]\n            }\n            syslogPortSelected()\n          } else {\n            TcpPortUtils.GetFreePortInRange('127.0.0.1', this.caps[Capabilities.DOCKERSYSLOGPORT_RANGE])\n              .then((syslogPort) => {\n                this.syslogPort = syslogPort\n                syslogPortSelected()\n              })\n              .catch(syslogPortSelected)\n          }\n        },\n\n        (facebookPortSelected) => {\n          if (this.fbMock) {\n            this.fbMock.SelectPublishPort(this.dockerIp, this.caps).then(() => facebookPortSelected()).catch(facebookPortSelected)\n          } else {\n            facebookPortSelected()\n          }\n        },\n\n        (slackPortSelected) => {\n          if (this.slackMock) {\n            this.slackMock.SelectPublishPort(this.dockerIp, this.caps).then(() => slackPortSelected()).catch(slackPortSelected)\n          } else {\n            slackPortSelected()\n          }\n        },\n\n        (botframeworkPortSelected) => {\n          if (this.botframeworkMock) {\n            this.botframeworkMock.SelectPublishPort(this.dockerIp, this.caps).then(() => botframeworkPortSelected()).catch(botframeworkPortSelected)\n          } else {\n            botframeworkPortSelected()\n          }\n        },\n\n        (facebookMockPrepared) => {\n          if (this.fbMock) {\n            this.fbMock.PrepareDocker(path.resolve(this.tempDirectory, 'fbmock')).then(() => facebookMockPrepared()).catch(facebookMockPrepared)\n          } else {\n            facebookMockPrepared()\n          }\n        },\n\n        (slackMockPrepared) => {\n          if (this.slackMock) {\n            this.slackMock.PrepareDocker(path.resolve(this.tempDirectory, 'slackmock')).then(() => slackMockPrepared()).catch(slackMockPrepared)\n          } else {\n            slackMockPrepared()\n          }\n        },\n\n        (botframeworkMockPrepared) => {\n          if (this.botframeworkMock) {\n            this.botframeworkMock.PrepareDocker(path.resolve(this.tempDirectory, 'botframeworkmock')).then(() => botframeworkMockPrepared()).catch(botframeworkMockPrepared)\n          } else {\n            botframeworkMockPrepared()\n          }\n        },\n\n        (dockercomposeUsed) => {\n          const promises = []\n          if (this.fbMock) {\n            promises.push(this.fbMock.GetDockerCompose().then((f) => {\n              this.dockerConfig.composefiles.push(f)\n            }))\n          }\n          if (this.slackMock) {\n            promises.push(this.slackMock.GetDockerCompose().then((f) => {\n              this.dockerConfig.composefiles.push(f)\n            }))\n          }\n          if (this.botframeworkMock) {\n            promises.push(this.botframeworkMock.GetDockerCompose().then((f) => {\n              this.dockerConfig.composefiles.push(f)\n            }))\n          }\n          Promise.all(promises).then(() => dockercomposeUsed())\n        },\n\n        (dockercomposeEnvUsed) => {\n          const sysLog = {\n            driver: 'syslog',\n            options: {\n              'syslog-address': `udp://127.0.0.1:${this.syslogPort}`\n            }\n          }\n\n          const composeEnv = {\n            version: '2',\n            services: {\n              botium: {\n                build: {\n                  context: this.repo.workingDirectory\n                },\n                logging: _.cloneDeep(sysLog),\n                volumes: [\n                  `${this.repo.workingDirectory}:/usr/src/app`\n                ]\n              }\n            }\n          }\n          if (this.envs) {\n            composeEnv.services.botium.environment = this._cleanDockerEnv(this.envs)\n          }\n          if (this.fbMock) {\n            this.fbMock.FillDockerEnv(composeEnv, this.caps, sysLog)\n          }\n          if (this.slackMock) {\n            this.slackMock.FillDockerEnv(composeEnv, this.caps, sysLog)\n          }\n          if (this.botframeworkMock) {\n            this.botframeworkMock.FillDockerEnv(composeEnv, this.caps, sysLog)\n          }\n\n          this.dockercomposeEnvFile = path.resolve(this.tempDirectory, `docker-env.yml`)\n\n          debug(`Writing docker compose environment to ${this.dockercomposeEnvFile} - ${JSON.stringify(composeEnv)}`)\n          yaml(this.dockercomposeEnvFile, composeEnv, (err) => {\n            if (err) return dockercomposeEnvUsed(`Writing docker file ${this.dockercomposeEnvFile} failed: ${err}`)\n            this.dockerConfig.composefiles.push(this.dockercomposeEnvFile)\n            dockercomposeEnvUsed()\n          })\n        },\n\n        (dockercomposeOverrideUsed) => {\n          const dockercomposeOverride = path.resolve(this.repo.workingDirectory, 'docker-compose.botium.override.yml')\n          fs.stat(dockercomposeOverride, (err, stats) => {\n            if (!err && stats.isFile()) {\n              debug(`Docker-Compose file ${dockercomposeOverride} present, using it.`)\n              this.dockerConfig.composefiles.push(dockercomposeOverride)\n            }\n            dockercomposeOverrideUsed()\n          })\n        },\n\n        (dockercomposeLocalOverrideUsed) => {\n          const dockercomposeOverride = path.resolve(process.cwd(), 'docker-compose.botium.override.yml')\n          fs.stat(dockercomposeOverride, (err, stats) => {\n            if (!err && stats.isFile()) {\n              debug(`Docker-Compose file ${dockercomposeOverride} present, using it.`)\n              this.dockerConfig.composefiles.push(dockercomposeOverride)\n            }\n            dockercomposeLocalOverrideUsed()\n          })\n        },\n\n        (dockerReady) => {\n          this.dockerConfig.composefiles = _.uniq(this.dockerConfig.composefiles)\n          debug(this.dockerConfig)\n          this.dockerCmd = new DockerCmd(this.dockerConfig)\n          this.dockerCmd.setupContainer()\n            .then(() => {\n              dockerReady()\n            })\n            .catch((err) => {\n              dockerReady(`Cannot build docker containers: ${util.inspect(err)}`)\n            })\n        }\n\n      ], (err) => {\n        if (err) {\n          return reject(new Error(`Cannot build docker containers: ${util.inspect(err)}`))\n        }\n        resolve(this)\n      })\n    })\n  }\n\n  Start () {\n    this.eventEmitter.emit(Events.CONTAINER_STARTING, this)\n\n    return new Promise((resolve, reject) => {\n      async.series([\n\n        (baseComplete) => {\n          super.Start().then(() => baseComplete()).catch(baseComplete)\n        },\n\n        (syslogStarted) => {\n          let waitFor = Promise.resolve()\n          if (this.syslogServer) {\n            waitFor = this.syslogServer.stop()\n          }\n          waitFor.then(() => {\n            this.syslogFile = path.resolve(this.tempDirectory, 'docker-containers-log.txt')\n\n            this.syslogServer = new SyslogServer()\n\n            this.syslogServer.on('message', (value) => {\n              debugContainerOutput(value.message)\n              fs.appendFile(this.syslogFile, value.message, () => { })\n            })\n            this.syslogServer.on('error', (err) => {\n              debug(`Error from syslog server: ${util.inspect(err)}`)\n            })\n            this.syslogServer.start({ port: this.syslogPort })\n              .then(() => syslogStarted())\n              .catch((err) => {\n                syslogStarted(`Cannot start syslog server: ${util.inspect(err)}`)\n              })\n          }).catch((err) => {\n            syslogStarted(`Cannot stop running syslog server: ${util.inspect(err)}`)\n          })\n        },\n\n        (dockerStarted) => {\n          if (!this.dockerCmd) return dockerStarted('not built')\n\n          this.dockerCmd.startContainer()\n            .then(() => dockerStarted())\n            .catch((err) => {\n              dockerStarted(`Cannot start docker containers: ${util.inspect(err)}`)\n            })\n        },\n\n        (facebookMockupOnline) => {\n          if (this.fbMock) {\n            this.fbMock.Start(this).then(() => facebookMockupOnline()).catch(facebookMockupOnline)\n          } else {\n            facebookMockupOnline()\n          }\n        },\n\n        (slackMockupOnline) => {\n          if (this.slackMock) {\n            this.slackMock.Start(this).then(() => slackMockupOnline()).catch(slackMockupOnline)\n          } else {\n            slackMockupOnline()\n          }\n        },\n\n        (botframeworkMockupOnline) => {\n          if (this.botframeworkMock) {\n            this.botframeworkMock.Start(this).then(() => botframeworkMockupOnline()).catch(botframeworkMockupOnline)\n          } else {\n            botframeworkMockupOnline()\n          }\n        }\n\n      ], (err) => {\n        if (err) {\n          this.eventEmitter.emit(Events.CONTAINER_START_ERROR, this, err)\n          return reject(new Error(`Start failed ${util.inspect(err)}`))\n        }\n        this.eventEmitter.emit(Events.CONTAINER_STARTED, this)\n        resolve(this)\n      })\n    })\n  }\n\n  UserSays (mockMsg) {\n    return new Promise((resolve, reject) => {\n      if (this.fbMock && this.fbMock.socket) {\n        this.fbMock.socket.emit(BotiumMockCommand.MOCKCMD_SENDTOBOT, mockMsg)\n        this.eventEmitter.emit(Events.MESSAGE_SENTTOBOT, this, mockMsg)\n        resolve(this)\n      } else if (this.slackMock && this.slackMock.socket) {\n        this.slackMock.socket.emit(BotiumMockCommand.MOCKCMD_SENDTOBOT, mockMsg)\n        this.eventEmitter.emit(Events.MESSAGE_SENTTOBOT, this, mockMsg)\n        resolve(this)\n      } else if (this.botframeworkMock && this.botframeworkMock.socket) {\n        this.botframeworkMock.socket.emit(BotiumMockCommand.MOCKCMD_SENDTOBOT, mockMsg)\n        this.eventEmitter.emit(Events.MESSAGE_SENTTOBOT, this, mockMsg)\n        resolve(this)\n      } else {\n        this.eventEmitter.emit(Events.MESSAGE_SENDTOBOT_ERROR, this, 'No Mock online')\n        reject(new Error('No Mock online'))\n      }\n    })\n  }\n\n  Stop () {\n    this.eventEmitter.emit(Events.CONTAINER_STOPPING, this)\n\n    return new Promise((resolve, reject) => {\n      async.series([\n\n        (baseComplete) => {\n          super.Stop().then(() => baseComplete()).catch(baseComplete)\n        },\n\n        (facebookStopDone) => {\n          if (this.fbMock) {\n            this.fbMock.Stop().then(() => facebookStopDone()).catch(facebookStopDone)\n          } else {\n            facebookStopDone()\n          }\n        },\n\n        (slackStopDone) => {\n          if (this.slackMock) {\n            this.slackMock.Stop().then(() => slackStopDone()).catch(slackStopDone)\n          } else {\n            slackStopDone()\n          }\n        },\n\n        (botframeworkStopDone) => {\n          if (this.botframeworkMock) {\n            this.botframeworkMock.Stop(this).then(() => botframeworkStopDone()).catch(botframeworkStopDone)\n          } else {\n            botframeworkStopDone()\n          }\n        },\n\n        (dockerStopped) => {\n          if (!this.dockerCmd) return dockerStopped()\n\n          this.dockerCmd.stopContainer()\n            .then(() => {\n              dockerStopped()\n            })\n            .catch((err) => {\n              dockerStopped(`Cannot stop docker containers: ${util.inspect(err)}`)\n            })\n        },\n\n        (syslogStopped) => {\n          if (!this.syslogServer) return syslogStopped()\n\n          this.syslogServer.stop()\n            .then(() => {\n              this.syslogServer = null\n              syslogStopped()\n            })\n            .catch((err) => {\n              syslogStopped(`Cannot stop syslog server: ${util.inspect(err)}`)\n            })\n        }\n\n      ], (err) => {\n        if (err) {\n          this.eventEmitter.emit(Events.CONTAINER_STOP_ERROR, this, err)\n          return reject(new Error(`Stop failed ${util.inspect(err)}`))\n        }\n        this.eventEmitter.emit(Events.CONTAINER_STOPPED, this)\n        resolve(this)\n      })\n    })\n  }\n\n  Clean () {\n    this.eventEmitter.emit(Events.CONTAINER_CLEANING, this)\n\n    return new Promise((resolve, reject) => {\n      async.series([\n\n        (dockerStopped) => {\n          if (this.dockerCmd) {\n            this.dockerCmd.teardownContainer()\n              .then(() => {\n                dockerStopped()\n              })\n              .catch((err) => {\n                debug(`Cannot teardown docker containers: ${util.inspect(err)}`)\n                dockerStopped()\n              })\n          } else {\n            dockerStopped()\n          }\n        },\n\n        (baseComplete) => {\n          super.Clean().then(() => baseComplete()).catch(baseComplete)\n        }\n\n      ], (err) => {\n        if (err) {\n          this.eventEmitter.emit(Events.CONTAINER_CLEAN_ERROR, this, err)\n          return reject(new Error(`Cleanup failed ${util.inspect(err)}`))\n        }\n        this.eventEmitter.emit(Events.CONTAINER_CLEANED, this)\n        resolve(this)\n      })\n    })\n  }\n\n  _cleanDockerEnv (envs) {\n    const res = Object.assign({}, envs)\n    Object.keys(res).forEach((key) => {\n      let val = res[key]\n      if (typeof val === typeof true) res[key] = `${val}`\n    })\n    return res\n  }\n}\n","const util = require('util')\nconst async = require('async')\nconst fblogin = require('facebook-chat-api')\nconst debug = require('debug')('botium-FbContainer')\nconst debugApi = require('debug')('botium-FbContainer-Api')\n\nconst Events = require('../Events')\nconst Capabilities = require('../Capabilities')\nconst BaseContainer = require('./BaseContainer')\nconst BotiumMockMessage = require('../mocks/BotiumMockMessage')\n\nmodule.exports = class FbContainer extends BaseContainer {\n  Validate () {\n    return super.Validate().then(() => {\n      this._AssertCapabilityExists(Capabilities.FB_PAGEID)\n      this._AssertCapabilityExists(Capabilities.FB_USER)\n      this._AssertCapabilityExists(Capabilities.FB_PASSWORD)\n    })\n  }\n\n  Build () {\n    return new Promise((resolve, reject) => {\n      async.series([\n        (baseComplete) => {\n          super.Build().then(() => baseComplete()).catch(baseComplete)\n        },\n\n        (fbLoginReady) => {\n          this.fbapi = null\n          debug(`logging into facebook page ${this.caps[Capabilities.FB_PAGEID]} with user ${this.caps[Capabilities.FB_USER]}`)\n          fblogin({ email: this.caps[Capabilities.FB_USER], password: this.caps[Capabilities.FB_PASSWORD] }, { logLevel: debugApi.enabled ? 'verbose' : 'warn' }, (err, api) => {\n            if (err) {\n              fbLoginReady(`Facebook login failed: ${util.inspect(err)}`)\n            } else {\n              debug('logging into facebook ready')\n              this.fbapi = api\n              fbLoginReady()\n            }\n          })\n        }\n      ], (err) => {\n        if (err) {\n          return reject(new Error(`Cannot build facebook container: ${util.inspect(err)}`))\n        }\n        resolve(this)\n      })\n    })\n  }\n\n  Start () {\n    if (!this.fbapi) return Promise.reject(new Error('not built'))\n\n    this.eventEmitter.emit(Events.CONTAINER_STARTING, this)\n\n    return new Promise((resolve, reject) => {\n      async.series([\n        (baseComplete) => {\n          super.Start().then(() => baseComplete()).catch(baseComplete)\n        },\n\n        (startListenerDone) => {\n          if (this.fbapiStopListener) {\n            this.fbapiStopListener()\n            this.fbapiStopListener = null\n          }\n          this.fbapiStopListener = this.fbapi.listen((err, event) => {\n            if (err) {\n              debug(`fbapi Error: ${util.inspect(err)}`)\n            } else if (event.type === 'message') {\n              debug(`fbapi received message: ${util.inspect(event)}`)\n              const botMsg = { sourceData: event }\n              if (event.body) {\n                botMsg.messageText = event.body\n              }\n              this._QueueBotSays(new BotiumMockMessage(botMsg))\n            } else {\n              debug(`fbapi received ignored event: ${util.inspect(event)}`)\n            }\n          })\n          startListenerDone()\n        }\n      ], (err) => {\n        if (err) {\n          this.eventEmitter.emit(Events.CONTAINER_START_ERROR, this, err)\n          return reject(new Error(`Start failed ${util.inspect(err)}`))\n        }\n        this.eventEmitter.emit(Events.CONTAINER_STARTED, this)\n        resolve(this)\n      })\n    })\n  }\n\n  UserSays (mockMsg) {\n    if (!this.fbapi) return Promise.reject(new Error('not built'))\n\n    this.fbapi.sendMessage(mockMsg.messageText, this.caps[Capabilities.FB_PAGEID])\n    this.eventEmitter.emit(Events.MESSAGE_SENTTOBOT, this, mockMsg)\n    return Promise.resolve(this)\n  }\n\n  Stop () {\n    if (!this.fbapi) return Promise.reject(new Error('not built'))\n\n    this.eventEmitter.emit(Events.CONTAINER_STOPPING, this)\n\n    return new Promise((resolve, reject) => {\n      async.series([\n        (baseComplete) => {\n          super.Stop().then(() => baseComplete()).catch(baseComplete)\n        },\n\n        (stopListenerDone) => {\n          if (this.fbapiStopListener) {\n            this.fbapiStopListener()\n            this.fbapiStopListener = null\n          }\n          stopListenerDone()\n        }\n\n      ], (err) => {\n        if (err) {\n          this.eventEmitter.emit(Events.CONTAINER_STOP_ERROR, this, err)\n          return reject(new Error(`Stop failed ${util.inspect(err)}`))\n        }\n        this.eventEmitter.emit(Events.CONTAINER_STOPPED, this)\n        resolve(this)\n      })\n    })\n  }\n\n  Clean () {\n    if (!this.fbapi) return Promise.reject(new Error('not built'))\n\n    this.eventEmitter.emit(Events.CONTAINER_CLEANING, this)\n\n    return new Promise((resolve, reject) => {\n      async.series([\n\n        (fbLogoutReady) => {\n          if (this.fbapi) {\n            this.fbapi.logout((err) => {\n              debug(`logging out of facebook ready (${util.inspect(err)})`)\n              this.fbapi = null\n              fbLogoutReady()\n            })\n          } else {\n            fbLogoutReady()\n          }\n        },\n\n        (baseComplete) => {\n          super.Clean().then(() => baseComplete()).catch(baseComplete)\n        }\n\n      ], (err) => {\n        if (err) {\n          this.eventEmitter.emit(Events.CONTAINER_CLEAN_ERROR, this, err)\n          return reject(new Error(`Cleanup failed ${util.inspect(err)}`))\n        }\n        this.eventEmitter.emit(Events.CONTAINER_CLEANED, this)\n        resolve(this)\n      })\n    })\n  }\n}\n","const util = require('util')\nconst async = require('async')\nconst _ = require('lodash')\nconst Conversation = require('watson-developer-cloud/conversation/v1')\nconst debug = require('debug')('botium-WatsonConversationContainer')\n\nconst Events = require('../Events')\nconst Capabilities = require('../Capabilities')\nconst BaseContainer = require('./BaseContainer')\nconst BotiumMockMessage = require('../mocks/BotiumMockMessage')\n\nmodule.exports = class WatsonConversationContainer extends BaseContainer {\n  Validate () {\n    return super.Validate().then(() => {\n      this._AssertCapabilityExists(Capabilities.WATSONCONVERSATION_URL)\n      this._AssertCapabilityExists(Capabilities.WATSONCONVERSATION_VERSION_DATE)\n      this._AssertCapabilityExists(Capabilities.WATSONCONVERSATION_USER)\n      this._AssertCapabilityExists(Capabilities.WATSONCONVERSATION_PASSWORD)\n      this._AssertCapabilityExists(Capabilities.WATSONCONVERSATION_WORKSPACE_ID)\n    })\n  }\n\n  Build () {\n    return new Promise((resolve, reject) => {\n      async.series([\n        (baseComplete) => {\n          super.Build().then(() => baseComplete()).catch(baseComplete)\n        },\n\n        (conversationReady) => {\n          this.conversation = new Conversation({\n            url: this.caps[Capabilities.WATSONCONVERSATION_URL],\n            username: this.caps[Capabilities.WATSONCONVERSATION_USER],\n            password: this.caps[Capabilities.WATSONCONVERSATION_PASSWORD],\n            version_date: this.caps[Capabilities.WATSONCONVERSATION_VERSION_DATE]\n          })\n          conversationReady()\n        },\n\n        (workspaceCopied) => {\n          if (this.caps[Capabilities.WATSONCONVERSATION_COPY_WORKSPACE]) {\n            this.conversation.getWorkspace({ workspace_id: this.caps[Capabilities.WATSONCONVERSATION_WORKSPACE_ID], export: true }, (err, workspace) => {\n              if (err) {\n                workspaceCopied(`Watson workspace connection failed: ${util.inspect(err)}`)\n              } else {\n                this.conversation.createWorkspace(workspace, (err, workspaceCopy) => {\n                  if (err) {\n                    workspaceCopied(`Watson workspace copy failed: ${util.inspect(err)}`)\n                  } else {\n                    debug(`Watson workspace copied: ${util.inspect(workspaceCopy)}`)\n                    this.useWorkspaceId = workspaceCopy.workspace_id\n                    workspaceCopied()\n                  }\n                })\n              }\n            })\n          } else {\n            this.useWorkspaceId = this.caps[Capabilities.WATSONCONVERSATION_WORKSPACE_ID]\n            workspaceCopied()\n          }\n        },\n\n        (workspaceAvailableReady) => {\n          let workspaceAvailable = false\n\n          async.until(\n            () => workspaceAvailable,\n            (workspaceChecked) => {\n              debug(`Watson checking workspace status ${this.useWorkspaceId} before proceed`)\n\n              this.conversation.getWorkspace({ workspace_id: this.useWorkspaceId }, (err, workspace) => {\n                if (err) {\n                  workspaceChecked(`Watson workspace connection failed: ${util.inspect(err)}`)\n                } else {\n                  debug(`Watson workspace connected, checking for status 'Available': ${util.inspect(workspace)}`)\n                  if (workspace.status === 'Available') {\n                    workspaceAvailable = true\n                    workspaceChecked()\n                  } else {\n                    debug(`Watson workspace waiting for status 'Available'`)\n                    setTimeout(workspaceChecked, 10000)\n                  }\n                }\n              })\n            },\n            (err) => {\n              if (err) return workspaceAvailableReady(err)\n              workspaceAvailableReady()\n            })\n        }\n\n      ], (err) => {\n        if (err) {\n          return reject(new Error(`Cannot build watson container: ${util.inspect(err)}`))\n        }\n        resolve(this)\n      })\n    })\n  }\n\n  Start () {\n    if (!this.conversation) return Promise.reject(new Error('not built'))\n\n    this.eventEmitter.emit(Events.CONTAINER_STARTING, this)\n\n    return super.Start().then(() => {\n      this.conversationContext = {}\n      this.eventEmitter.emit(Events.CONTAINER_STARTED, this)\n      return this\n    })\n  }\n\n  UserSays (mockMsg) {\n    if (!this.conversation) return Promise.reject(new Error('not built'))\n\n    return new Promise((resolve, reject) => {\n      const payload = {\n        workspace_id: this.useWorkspaceId,\n        context: this.conversationContext || {},\n        input: { text: mockMsg.messageText }\n      }\n      if (this.caps[Capabilities.WATSONCONVERSATION_USE_INTENT]) {\n        payload.alternate_intents = true\n      }\n      this.conversation.message(payload, (err, data) => {\n        if (err) return reject(new Error(`Cannot send message to watson container: ${util.inspect(err)}`))\n\n        debug(`Watson response: ${util.inspect(data)}`)\n        this.conversationContext = data.context\n        this.eventEmitter.emit(Events.MESSAGE_SENTTOBOT, this, mockMsg)\n\n        if (this.caps[Capabilities.WATSONCONVERSATION_USE_INTENT]) {\n          if (data.intents.length > 1 && data.intents[0].confidence === data.intents[1].confidence) {\n            return reject(new Error(`Got duplicate intent confidence ${util.inspect(data.intents[0])} vs ${util.inspect(data.intents[1])}`))\n          }\n        }\n        resolve(this)\n\n        if (this.caps[Capabilities.WATSONCONVERSATION_USE_INTENT]) {\n          if (data.intents && data.intents.length > 0) {\n            const botMsg = { sender: 'bot', sourceData: data, messageText: data.intents[0].intent }\n            this._QueueBotSays(new BotiumMockMessage(botMsg))\n          }\n        } else {\n          if (data.output && data.output.text) {\n            const messageTexts = (_.isArray(data.output.text) ? data.output.text : [ data.output.text ])\n\n            messageTexts.forEach((messageText) => {\n              if (!messageText) return\n\n              const botMsg = { sender: 'bot', sourceData: data, messageText }\n              this._QueueBotSays(new BotiumMockMessage(botMsg))\n            })\n          }\n        }\n      })\n    })\n  }\n\n  Stop () {\n    if (!this.conversation) return Promise.reject(new Error('not built'))\n\n    this.eventEmitter.emit(Events.CONTAINER_STOPPING, this)\n\n    return super.Stop().then(() => {\n      this.eventEmitter.emit(Events.CONTAINER_STOPPED, this)\n      return this\n    })\n  }\n\n  Clean () {\n    if (!this.conversation) return Promise.reject(new Error('not built'))\n\n    this.eventEmitter.emit(Events.CONTAINER_CLEANING, this)\n\n    return new Promise((resolve, reject) => {\n      async.series([\n\n        (workspaceDeleteReady) => {\n          if (this.caps[Capabilities.WATSONCONVERSATION_COPY_WORKSPACE]) {\n            this.conversation.deleteWorkspace({ workspace_id: this.useWorkspaceId }, (err) => {\n              if (err) {\n                debug(`Watson workspace delete copy failed: ${util.inspect(err)}`)\n              } else {\n                debug(`Watson workspace deleted: ${this.useWorkspaceId}`)\n              }\n              workspaceDeleteReady()\n            })\n          } else {\n            workspaceDeleteReady()\n          }\n        },\n\n        (conversationReset) => {\n          this.conversation = null\n          this.conversationContext = null\n          conversationReset()\n        },\n\n        (baseComplete) => {\n          super.Clean().then(() => baseComplete()).catch(baseComplete)\n        }\n\n      ], (err) => {\n        if (err) {\n          this.eventEmitter.emit(Events.CONTAINER_CLEAN_ERROR, this, err)\n          return reject(new Error(`Cleanup failed ${util.inspect(err)}`))\n        }\n        this.eventEmitter.emit(Events.CONTAINER_CLEANED, this)\n        resolve(this)\n      })\n    })\n  }\n}\n","const util = require('util')\nconst async = require('async')\nconst request = require('request')\nconst Mustache = require('mustache')\nconst jp = require('jsonpath')\nconst _ = require('lodash')\nconst debug = require('debug')('botium-SimpleRestContainer')\n\nconst Events = require('../Events')\nconst Capabilities = require('../Capabilities')\nconst BaseContainer = require('./BaseContainer')\nconst BotiumMockMessage = require('../mocks/BotiumMockMessage')\n\nmodule.exports = class SimpleRestContainer extends BaseContainer {\n  Validate () {\n    return super.Validate().then(() => {\n      this._AssertCapabilityExists(Capabilities.SIMPLEREST_URL)\n      this._AssertCapabilityExists(Capabilities.SIMPLEREST_METHOD)\n      this._AssertCapabilityExists(Capabilities.SIMPLEREST_RESPONSE_JSONPATH)\n\n      if (this.caps[Capabilities.SIMPLEREST_INIT_CONTEXT]) {\n        JSON.parse(this.caps[Capabilities.SIMPLEREST_INIT_CONTEXT])\n      }\n    })\n  }\n\n  Build () {\n    return new Promise((resolve, reject) => {\n      async.series([\n        (baseComplete) => {\n          super.Build().then(() => baseComplete()).catch(baseComplete)\n        }\n\n      ], (err) => {\n        if (err) {\n          return reject(new Error(`Cannot build simplereset container: ${util.inspect(err)}`))\n        }\n        resolve(this)\n      })\n    })\n  }\n\n  Start () {\n    this.eventEmitter.emit(Events.CONTAINER_STARTING, this)\n\n    return new Promise((resolve, reject) => {\n      async.series([\n        (baseComplete) => {\n          super.Start().then(() => baseComplete()).catch(baseComplete)\n        },\n\n        (contextInitComplete) => {\n          this.view = {\n            context: { },\n            msg: { }\n          }\n          if (this.caps[Capabilities.SIMPLEREST_INIT_CONTEXT]) {\n            try {\n              this.view.context = JSON.parse(this.caps[Capabilities.SIMPLEREST_INIT_CONTEXT])\n            } catch (err) {\n              contextInitComplete(`parsing SIMPLEREST_INIT_CONTEXT failed, no JSON detected (${util.inspect(err)})`)\n            }\n          }\n          contextInitComplete()\n        },\n\n        (initComplete) => {\n          if (this.caps[Capabilities.SIMPLEREST_INIT_TEXT]) {\n            this._doRequest({ messageText: this.caps[Capabilities.SIMPLEREST_INIT_TEXT] }, false).then(() => initComplete()).catch(initComplete)\n          } else {\n            initComplete()\n          }\n        }\n      ], (err) => {\n        if (err) {\n          this.eventEmitter.emit(Events.CONTAINER_START_ERROR, this, err)\n          return reject(new Error(`Start failed ${util.inspect(err)}`))\n        }\n        this.eventEmitter.emit(Events.CONTAINER_STARTED, this)\n        resolve(this)\n      })\n    })\n  }\n\n  UserSays (mockMsg) {\n    return this._doRequest(mockMsg, true)\n  }\n\n  Stop () {\n    this.eventEmitter.emit(Events.CONTAINER_STOPPING, this)\n\n    return new Promise((resolve, reject) => {\n      async.series([\n        (baseComplete) => {\n          super.Stop().then(() => baseComplete()).catch(baseComplete)\n        }\n      ], (err) => {\n        if (err) {\n          this.eventEmitter.emit(Events.CONTAINER_STOP_ERROR, this, err)\n          return reject(new Error(`Stop failed ${util.inspect(err)}`))\n        }\n        this.eventEmitter.emit(Events.CONTAINER_STOPPED, this)\n        resolve(this)\n      })\n    })\n  }\n\n  Clean () {\n    this.eventEmitter.emit(Events.CONTAINER_CLEANING, this)\n\n    return new Promise((resolve, reject) => {\n      async.series([\n        (baseComplete) => {\n          super.Clean().then(() => baseComplete()).catch(baseComplete)\n        }\n\n      ], (err) => {\n        if (err) {\n          this.eventEmitter.emit(Events.CONTAINER_CLEAN_ERROR, this, err)\n          return reject(new Error(`Cleanup failed ${util.inspect(err)}`))\n        }\n        this.eventEmitter.emit(Events.CONTAINER_CLEANED, this)\n        resolve(this)\n      })\n    })\n  }\n\n  _doRequest (msg, evalResponseBody) {\n    return new Promise((resolve, reject) => {\n      const requestOptions = this._buildRequest(msg)\n      debug(`constructed requestOptions ${util.inspect(requestOptions)}`)\n\n      request(requestOptions, (err, response, body) => {\n        if (err) {\n          reject(new Error(`rest request failed: ${util.inspect(err)}`))\n        } else {\n          this.eventEmitter.emit(Events.MESSAGE_SENTTOBOT, this, msg)\n\n          if (response.statusCode >= 400) {\n            debug(`got error response: ${response.statusCode}/${response.statusMessage}`)\n            return reject(new Error(`got error response: ${response.statusCode}/${response.statusMessage}`))\n          }\n\n          if (body) {\n            debug(`got response body: ${util.inspect(body)}`)\n\n            if (this.caps[Capabilities.SIMPLEREST_CONTEXT_JSONPATH]) {\n              const contextNodes = jp.query(body, this.caps[Capabilities.SIMPLEREST_CONTEXT_JSONPATH])\n              if (_.isArray(contextNodes) && contextNodes.length > 0) {\n                this.view.context = contextNodes[0]\n                debug(`found context: ${util.inspect(this.view.context)}`)\n              } else {\n                this.view.context = {}\n              }\n            } else {\n              this.view.context = body\n            }\n\n            if (evalResponseBody) {\n              const jsonPathCaps = _.pickBy(this.caps, (v, k) => k.startsWith(Capabilities.SIMPLEREST_RESPONSE_JSONPATH))\n              _(jsonPathCaps).keys().sort().each((key) => {\n                const jsonPath = this.caps[key]\n                debug(`eval json path ${jsonPath}`)\n\n                const responseTexts = jp.query(body, jsonPath)\n                debug(`found response texts: ${util.inspect(responseTexts)}`)\n\n                const messageTexts = (_.isArray(responseTexts) ? responseTexts : [ responseTexts ])\n                messageTexts.forEach((messageText) => {\n                  if (!messageText) return\n\n                  const botMsg = { sourceData: body, messageText }\n                  this._QueueBotSays(new BotiumMockMessage(botMsg))\n                })\n              })\n            }\n          }\n\n          resolve(this)\n        }\n      })\n    })\n  }\n\n  _buildRequest (msg) {\n    this.view.msg = Object.assign({}, msg)\n    var nonEncodedMessage = this.view.msg.messageText\n    if (this.view.msg.messageText) {\n      this.view.msg.messageText = encodeURIComponent(this.view.msg.messageText)\n    }\n    const uri = Mustache.render(this.caps[Capabilities.SIMPLEREST_URL], this.view)\n\n    const requestOptions = {\n      uri,\n      method: this.caps[Capabilities.SIMPLEREST_METHOD],\n      json: true\n    }\n    if (this.view.msg.messageText) {\n      this.view.msg.messageText = nonEncodedMessage\n    }\n    if (this.caps[Capabilities.SIMPLEREST_HEADERS_TEMPLATE]) {\n      try {\n        requestOptions.headers = JSON.parse(Mustache.render(this.caps[Capabilities.SIMPLEREST_HEADERS_TEMPLATE], this.view))\n      } catch (err) {\n        throw new Error(`composing headers from SIMPLEREST_HEADERS_TEMPLATE failed (${util.inspect(err)})`)\n      }\n    }\n    if (this.caps[Capabilities.SIMPLEREST_BODY_TEMPLATE]) {\n      try {\n        requestOptions.body = Mustache.render(this.caps[Capabilities.SIMPLEREST_BODY_TEMPLATE], this.view)\n      } catch (err) {\n        throw new Error(`composing body from SIMPLEREST_BODY_TEMPLATE failed (${util.inspect(err)})`)\n      }\n      if (!this.caps[Capabilities.SIMPLEREST_BODY_RAW]) {\n        requestOptions.body = JSON.parse(requestOptions.body)\n      }\n    }\n    return requestOptions\n  }\n}\n","const util = require('util')\nconst opn = require('opn')\nconst path = require('path')\nconst async = require('async')\nconst findRoot = require('find-root')\nconst HttpServer = require('tiny-server')\nconst socket = require('socket.io')\nconst debug = require('debug')('botium-WebSpeechContainer')\n\nconst Capabilities = require('../Capabilities')\nconst Events = require('../Events')\nconst BaseContainer = require('./BaseContainer')\nconst BotiumMockMessage = require('../mocks/BotiumMockMessage')\n\nconst botiumPackageRootDir = findRoot()\n\nmodule.exports = class WebSpeechContainer extends BaseContainer {\n  Validate () {\n    return super.Validate().then(() => {\n      this._AssertCapabilityExists(Capabilities.WEBSPEECH_SERVER_PORT)\n      this._AssertCapabilityExists(Capabilities.WEBSPEECH_LANGUAGE)\n    })\n  }\n\n  Build () {\n    this.browserConfig = {\n      WEBSPEECH_LANGUAGE: this.caps[Capabilities.WEBSPEECH_LANGUAGE],\n      WEBSPEECH_PITCH: this.caps[Capabilities.WEBSPEECH_PITCH],\n      WEBSPEECH_RATE: this.caps[Capabilities.WEBSPEECH_RATE],\n      WEBSPEECH_VOLUME: this.caps[Capabilities.WEBSPEECH_VOLUME],\n      WEBSPEECH_VOICE: this.caps[Capabilities.WEBSPEECH_VOICE]\n    }\n\n    return new Promise((resolve, reject) => {\n      async.series([\n        (baseComplete) => {\n          super.Build().then(() => baseComplete()).catch(baseComplete)\n        },\n\n        (httpServerComplete) => {\n          this.httpServer = new HttpServer(path.resolve(botiumPackageRootDir, 'src', 'containers', 'webspeech'))\n          this.io = socket(this.httpServer)\n          this.io.on('connection', (clientSocket) => {\n            debug('browser connected to socket')\n            this.clientSocket = clientSocket\n            this.clientSocket.on('disconnect', () => {\n              debug('browser disconnecteded from socket')\n              this.clientSocket = null\n            })\n            this.clientSocket.on('log', (msg) => {\n              debug(`browser log: ${msg}`)\n            })\n            this.clientSocket.on('botsays', (msg) => {\n              debug(`browser botsays: ${msg}`)\n              if (msg) {\n                const botMsg = { sender: 'bot', messageText: msg }\n                this._QueueBotSays(new BotiumMockMessage(botMsg))\n              }\n            })\n            this.clientSocket.on('usersaid', (msg) => {\n              if (this.usersaidResolve) {\n                this.usersaidResolve()\n                this.usersaidResolve = null\n              }\n            })\n            this.clientSocket.emit('startrecognize', this.browserConfig)\n\n            if (this.connectResolve) {\n              this.connectResolve()\n              this.connectResolve = null\n            }\n          })\n          this.httpServer.listen(this.caps[Capabilities.WEBSPEECH_SERVER_PORT], () => {\n            debug(`waiting for browser connection on port ${this.caps[Capabilities.WEBSPEECH_SERVER_PORT]}`)\n            httpServerComplete()\n          }).once('error', (err) => {\n            if (err.code === 'EADDRINUSE') {\n              debug(`port ${this.caps[Capabilities.WEBSPEECH_SERVER_PORT]} already in use.`)\n              httpServerComplete(err)\n            }\n          })\n        }\n\n      ], (err) => {\n        if (err) {\n          return reject(new Error(`Cannot build webspeech container: ${util.inspect(err)}`))\n        }\n        resolve(this)\n      })\n    })\n  }\n\n  Start () {\n    this.eventEmitter.emit(Events.CONTAINER_STARTING, this)\n\n    return new Promise((resolve, reject) => {\n      async.series([\n        (baseComplete) => {\n          super.Start().then(() => baseComplete()).catch(baseComplete)\n        },\n\n        (opnComplete) => {\n          if (this.clientSocket) {\n            opnComplete()\n          } else {\n            this.connectResolve = opnComplete\n\n            let opnOptions = { }\n            if (this.caps[Capabilities.WEBSPEECH_BROWSER_APP]) {\n              opnOptions.app = this.caps[Capabilities.WEBSPEECH_BROWSER_APP]\n            }\n\n            const browserUrl = `http://127.0.0.1:${this.caps[Capabilities.WEBSPEECH_SERVER_PORT]}/WebSpeechContainer.html`\n            debug(`opening browser process to point to url ${browserUrl}`)\n            opn(browserUrl, opnOptions).then((cp) => {\n              debug(`browser process running`)\n              this.clientProcess = cp\n            })\n          }\n        }\n\n      ], (err) => {\n        if (err) {\n          this.eventEmitter.emit(Events.CONTAINER_START_ERROR, this, err)\n          return reject(new Error(`Start failed ${util.inspect(err)}`))\n        }\n        this.eventEmitter.emit(Events.CONTAINER_STARTED, this)\n        resolve(this)\n      })\n    })\n  }\n\n  UserSays (mockMsg) {\n    return new Promise((resolve, reject) => {\n      if (this.clientSocket) {\n        this.usersaidResolve = () => {\n          this.eventEmitter.emit(Events.MESSAGE_SENTTOBOT, this, mockMsg)\n          resolve(this)\n        }\n        this.clientSocket.emit('usersays', this.browserConfig, mockMsg)\n      } else {\n        this.eventEmitter.emit(Events.MESSAGE_SENDTOBOT_ERROR, this, 'browser connection not online')\n        reject(new Error('browser connection not online'))\n      }\n    })\n  }\n\n  Stop () {\n    this.eventEmitter.emit(Events.CONTAINER_STOPPING, this)\n\n    return new Promise((resolve, reject) => {\n      async.series([\n        (baseComplete) => {\n          super.Stop().then(() => baseComplete()).catch(baseComplete)\n        }\n\n      ], (err) => {\n        if (err) {\n          this.eventEmitter.emit(Events.CONTAINER_STOP_ERROR, this, err)\n          return reject(new Error(`Stop failed ${util.inspect(err)}`))\n        }\n        this.eventEmitter.emit(Events.CONTAINER_STOPPED, this)\n        resolve(this)\n      })\n    })\n  }\n\n  Clean () {\n    this.eventEmitter.emit(Events.CONTAINER_CLEANING, this)\n\n    return new Promise((resolve, reject) => {\n      async.series([\n        (baseComplete) => {\n          super.Clean().then(() => baseComplete()).catch(baseComplete)\n        },\n\n        (httpServerStopped) => {\n          this.io = null\n          if (this.clientSocket) {\n            if (this.caps[Capabilities.WEBSPEECH_CLOSEBROWSER]) {\n              this.clientSocket.emit('close')\n            }\n            this.clientSocket.disconnect(true)\n            this.clientSocket = null\n          }\n          if (this.httpServer) {\n            debug('closing http server')\n            this.httpServer.close(() => {\n              debug('stopped browser listening.')\n              this.httpServer = null\n              httpServerStopped()\n            })\n          } else {\n            httpServerStopped()\n          }\n        },\n\n        (clientProcessStopped) => {\n          if (this.caps[Capabilities.WEBSPEECH_CLOSEBROWSER]) {\n            if (this.clientProcess) {\n              debug('killing browser process')\n              this.clientProcess.kill()\n            }\n          }\n          this.clientProcess = null\n          clientProcessStopped()\n        }\n\n      ], (err) => {\n        if (err) {\n          this.eventEmitter.emit(Events.CONTAINER_CLEAN_ERROR, this, err)\n          return reject(new Error(`Cleanup failed ${util.inspect(err)}`))\n        }\n        this.eventEmitter.emit(Events.CONTAINER_CLEANED, this)\n        resolve(this)\n      })\n    })\n  }\n}\n","const Events = require('../Events')\nconst BaseContainer = require('./BaseContainer')\nconst BotiumMockMessage = require('../mocks/BotiumMockMessage')\n\nmodule.exports = class InProcessContainer extends BaseContainer {\n  UserSays (mockMsg) {\n    this.eventEmitter.emit(Events.MESSAGE_SENTTOBOT, this, mockMsg)\n    return Promise.resolve(this)\n  }\n  InjectBotSays (botMsg) {\n    this._QueueBotSays(new BotiumMockMessage(botMsg))\n  }\n}\n","const util = require('util')\nconst debug = require('debug')('botium-PluginConnectorContainer')\n\nconst Events = require('../Events')\nconst Capabilities = require('../Capabilities')\nconst BaseContainer = require('./BaseContainer')\n\nmodule.exports = class PluginConnectorContainer extends BaseContainer {\n  Validate () {\n    return super.Validate().then(() => {\n      const tryLoadPackage = `botium-connector-${this.caps[Capabilities.CONTAINERMODE]}`\n      try {\n        this.plugin = require(tryLoadPackage)\n        debug(`Botium plugin ${tryLoadPackage} loaded`)\n      } catch (err) {\n        throw new Error(`Loading Botium plugin ${tryLoadPackage} failed, try \"npm install ${tryLoadPackage}\" - ${util.inspect(err)}`)\n      }\n      if (!this.plugin.PluginVersion || !this.plugin.PluginClass) {\n        throw new Error(`Invalid Botium plugin ${tryLoadPackage}, expected PluginVersion, PluginClass fields`)\n      }\n      this.pluginInstance = new this.plugin.PluginClass({\n        queueBotSays: (msg) => this._QueueBotSays(msg),\n        caps: this.caps,\n        sources: this.sources,\n        envs: this.envs\n      })\n      if (!this.pluginInstance.UserSays) {\n        throw new Error(`Invalid Botium plugin ${tryLoadPackage}, expected UserSays function`)\n      }\n      return this.pluginInstance.Validate()\n    })\n  }\n\n  Build () {\n    try {\n      return super.Build().then(() => this.pluginInstance.Build ? (this.pluginInstance.Build() || Promise.resolve()) : Promise.resolve()).then(() => this)\n    } catch (err) {\n      return Promise.reject(new Error(`Build - Botium plugin failed: ${util.inspect(err)}`))\n    }\n  }\n\n  Start () {\n    this.eventEmitter.emit(Events.CONTAINER_STARTING, this)\n\n    try {\n      return super.Start().then(() => this.pluginInstance.Start ? (this.pluginInstance.Start() || Promise.resolve()) : Promise.resolve()).then(() => {\n        this.eventEmitter.emit(Events.CONTAINER_STARTED, this)\n        return this\n      }).catch((err) => {\n        this.eventEmitter.emit(Events.CONTAINER_START_ERROR, this, err)\n        throw err\n      })\n    } catch (err) {\n      this.eventEmitter.emit(Events.CONTAINER_START_ERROR, this, err)\n      return Promise.reject(new Error(`Start - Botium plugin failed: ${util.inspect(err)}`))\n    }\n  }\n\n  UserSays (mockMsg) {\n    try {\n      return (this.pluginInstance.UserSays(mockMsg) || Promise.resolve()).then(() => {\n        this.eventEmitter.emit(Events.MESSAGE_SENTTOBOT, this, mockMsg)\n        return this\n      })\n    } catch (err) {\n      return Promise.reject(new Error(`UserSays - Botium plugin failed: ${util.inspect(err)}`))\n    }\n  }\n\n  Stop () {\n    this.eventEmitter.emit(Events.CONTAINER_STOPPING, this)\n\n    try {\n      return super.Stop().then(() => this.pluginInstance.Stop ? (this.pluginInstance.Stop() || Promise.resolve()) : Promise.resolve()).then(() => {\n        this.eventEmitter.emit(Events.CONTAINER_STOPPED, this)\n        return this\n      }).catch((err) => {\n        this.eventEmitter.emit(Events.CONTAINER_STOP_ERROR, this, err)\n        throw err\n      })\n    } catch (err) {\n      this.eventEmitter.emit(Events.CONTAINER_STOP_ERROR, this, err)\n      return Promise.reject(new Error(`Stop - Botium plugin failed: ${util.inspect(err)}`))\n    }\n  }\n\n  Clean () {\n    this.eventEmitter.emit(Events.CONTAINER_CLEANING, this)\n\n    try {\n      return (this.pluginInstance.Clean ? (this.pluginInstance.Clean() || Promise.resolve()) : Promise.resolve()).then(() => super.Clean()).then(() => {\n        this.eventEmitter.emit(Events.CONTAINER_CLEANED, this)\n        return this\n      }).catch((err) => {\n        this.eventEmitter.emit(Events.CONTAINER_CLEAN_ERROR, this, err)\n        throw err\n      })\n    } catch (err) {\n      this.eventEmitter.emit(Events.CONTAINER_CLEAN_ERROR, this, err)\n      return Promise.reject(new Error(`Clean - Botium plugin failed: ${util.inspect(err)}`))\n    }\n  }\n}\n","const util = require('util')\nconst fs = require('fs')\nconst path = require('path')\nconst async = require('async')\nconst mkdirp = require('mkdirp')\nconst slug = require('slug')\nconst moment = require('moment')\nconst randomize = require('randomatic')\nconst EventEmitter = require('events')\nconst debug = require('debug')('botium-BotDriver')\n\nconst Defaults = require('./Defaults')\nconst Capabilities = require('./Capabilities')\nconst Source = require('./Source')\nconst Fluent = require('./Fluent')\nconst Events = require('./Events')\nconst ScriptingProvider = require('./scripting/ScriptingProvider')\n\nmodule.exports = class BotDriver {\n  constructor (caps = {}, sources = {}, env = {}) {\n    this.eventEmitter = new EventEmitter()\n\n    this.caps = Object.assign({}, Defaults.Capabilities)\n    this.sources = Object.assign({}, Defaults.Sources)\n    this.envs = Object.assign({}, Defaults.Envs)\n\n    const loadConfigFile = (filename) => {\n      try {\n        let configJson = JSON.parse(fs.readFileSync(filename))\n        if (configJson.botium) {\n          this.caps = Object.assign(this.caps, configJson.botium.Capabilities)\n          this.sources = Object.assign(this.sources, configJson.botium.Sources)\n          this.envs = Object.assign(this.envs, configJson.botium.Envs)\n          debug(`Loaded Botium configuration file ${filename}`)\n        } else {\n          debug(`Botium configuration file ${filename} contains no botium configuration. Ignored.`)\n        }\n      } catch (err) {\n        throw new Error(`FAILED: loading Botium configuration file ${filename}: ${util.inspect(err)}`)\n      }\n    }\n\n    if (fs.existsSync('./botium.json')) {\n      loadConfigFile('./botium.json')\n    }\n\n    let botiumConfigEnv = process.env['BOTIUM_CONFIG']\n    if (botiumConfigEnv) {\n      if (fs.existsSync(botiumConfigEnv)) {\n        loadConfigFile(botiumConfigEnv)\n      } else {\n        throw new Error(`FAILED: Botium configuration file ${botiumConfigEnv} not available`)\n      }\n    }\n\n    let capsToTest = Object.keys(Capabilities)\n    let sourcesToTest = Object.keys(Source)\n\n    Object.keys(process.env).filter(e => e.startsWith('BOTIUM_')).forEach((element) => {\n      let elementToTest = element.replace(/^BOTIUM_/, '')\n      if (capsToTest.includes(elementToTest)) {\n        this.caps[elementToTest] = process.env[element]\n        debug('Changed capability : ' + elementToTest + ' to : ' + process.env[element] + ' using environment variables.')\n      }\n      if (sourcesToTest.includes(elementToTest)) {\n        this.sources[elementToTest] = process.env[element]\n        debug('Changed capability : ' + elementToTest + ' to : ' + process.env[element] + ' using environment variables.')\n      }\n      if (element.startsWith('BOTIUM_ENV_')) {\n        let envName = element.replace(/^BOTIUM_ENV_/, '')\n        this.envs[envName] = process.env[element]\n        debug('Changed env : ' + envName + ' to : ' + process.env[element] + ' using environment variables.')\n      }\n    })\n\n    this.caps = Object.assign(this.caps, caps)\n    this.sources = Object.assign(this.sources, sources)\n  }\n\n  on (event, listener) {\n    this.eventEmitter.on(event, listener)\n    return this\n  }\n\n  setCapabilities (caps) {\n    this.caps = Object.assign(this.caps, caps)\n    return this\n  }\n\n  setCapability (cap, value) {\n    this.caps[cap] = value\n    return this\n  }\n\n  setSources (sources) {\n    this.sources = Object.assign(this.sources, sources)\n    return this\n  }\n\n  setSource (source, value) {\n    this.sources[source] = value\n    return this\n  }\n\n  setEnvs (envs) {\n    this.envs = Object.assign(this.envs, envs)\n    return this\n  }\n\n  setEnv (name, value) {\n    this.envs[name] = value\n    return this\n  }\n\n  BuildFluent () {\n    this.Fluent = new Fluent(this)\n    return this.Fluent\n  }\n\n  Build () {\n    debug(`Build - Capabilites: ${util.inspect(this.caps)}`)\n    debug(`Build - Sources : ${util.inspect(this.sources)}`)\n    debug(`Build - Envs : ${util.inspect(this.envs)}`)\n    this.eventEmitter.emit(Events.CONTAINER_BUILDING)\n\n    return new Promise((resolve, reject) => {\n      let repo = null\n      let container = null\n\n      async.series([\n\n        (driverValidated) => {\n          this._validate()\n            .then(() => driverValidated())\n            .catch(driverValidated)\n        },\n\n        (repoValidated) => {\n          try {\n            repo = this._getRepo()\n          } catch (err) {\n            return repoValidated(err)\n          }\n          repo.Validate().then(() => repoValidated()).catch(repoValidated)\n        },\n\n        (repoPrepared) => {\n          repo.Prepare().then(() => repoPrepared()).catch(repoPrepared)\n        },\n\n        (containerValidated) => {\n          try {\n            container = this._getContainer(repo)\n          } catch (err) {\n            return containerValidated(err)\n          }\n          container.Validate().then(() => containerValidated()).catch(containerValidated)\n        },\n\n        (containerBuilt) => {\n          container.Build().then(() => containerBuilt()).catch(containerBuilt)\n        }\n\n      ], (err) => {\n        if (err) {\n          debug(`BotDriver Build error: ${err}`)\n          this.eventEmitter.emit(Events.CONTAINER_BUILD_ERROR, err)\n          return reject(err)\n        }\n        this.eventEmitter.emit(Events.CONTAINER_BUILT, container)\n        resolve(container)\n      })\n    })\n  }\n\n  BuildCompiler () {\n    debug(`BuildCompiler: Capabilites: ${util.inspect(this.caps)}`)\n    try {\n      let compiler = new ScriptingProvider(this.caps)\n      compiler.Build()\n      return compiler\n    } catch (err) {\n      debug(`BotDriver BuildCompiler error: ${err}`)\n      throw err\n    }\n  }\n\n  /* Private Functions */\n\n  _validate () {\n    return new Promise((resolve, reject) => {\n      if (!this.caps[Capabilities.PROJECTNAME]) {\n        throw new Error(`Capability property ${Capabilities.PROJECTNAME} not set`)\n      }\n      if (!this.caps[Capabilities.TEMPDIR]) {\n        throw new Error(`Capability property ${Capabilities.TEMPDIR} not set`)\n      }\n\n      async.series([\n        (tempdirCreated) => {\n          this.tempDirectory = path.resolve(process.cwd(), this.caps[Capabilities.TEMPDIR], slug(`${this.caps[Capabilities.PROJECTNAME]} ${moment().format('YYYYMMDD HHmmss')} ${randomize('Aa0', 5)}`))\n\n          mkdirp(this.tempDirectory, (err) => {\n            if (err) {\n              return tempdirCreated(new Error(`Unable to create temp directory ${this.tempDirectory}: ${err}`))\n            }\n            tempdirCreated()\n          })\n        }\n\n      ], (err) => {\n        if (err) {\n          return reject(err)\n        }\n        resolve(this)\n      })\n    })\n  }\n\n  _getRepo () {\n    if (this.caps[Capabilities.BOTIUMGRIDURL]) {\n      const NoRepo = require('./repos/NoRepo')\n      return new NoRepo(this.tempDirectory, this.sources)\n    }\n    if (this.sources[Source.GITURL]) {\n      const GitRepo = require('./repos/GitRepo')\n      return new GitRepo(this.tempDirectory, this.sources)\n    }\n    if (this.sources[Source.LOCALPATH]) {\n      const LocalRepo = require('./repos/LocalRepo')\n      return new LocalRepo(this.tempDirectory, this.sources)\n    }\n    throw new Error(`No Repo provider found for Sources ${util.inspect(this.sources)}`)\n  }\n\n  _getContainer (repo) {\n    if (this.caps[Capabilities.BOTIUMGRIDURL]) {\n      const GridContainer = require('./containers/GridContainer')\n      return new GridContainer(this.eventEmitter, this.tempDirectory, repo, this.caps, this.envs)\n    }\n    if (!this.caps[Capabilities.CONTAINERMODE]) {\n      throw new Error(`Capability '${Capabilities.CONTAINERMODE}' missing`)\n    }\n    if (this.caps[Capabilities.CONTAINERMODE] === 'docker') {\n      const DockerContainer = require('./containers/DockerContainer')\n      return new DockerContainer(this.eventEmitter, this.tempDirectory, repo, this.caps, this.envs)\n    }\n    if (this.caps[Capabilities.CONTAINERMODE] === 'fbdirect') {\n      const FbContainer = require('./containers/FbContainer')\n      return new FbContainer(this.eventEmitter, this.tempDirectory, repo, this.caps, this.envs)\n    }\n    if (this.caps[Capabilities.CONTAINERMODE] === 'watsonconversation') {\n      const WatsonConversationContainer = require('./containers/WatsonConversationContainer')\n      return new WatsonConversationContainer(this.eventEmitter, this.tempDirectory, repo, this.caps, this.envs)\n    }\n    if (this.caps[Capabilities.CONTAINERMODE] === 'simplerest') {\n      const SimpleRestContainer = require('./containers/SimpleRestContainer')\n      return new SimpleRestContainer(this.eventEmitter, this.tempDirectory, repo, this.caps, this.envs)\n    }\n    if (this.caps[Capabilities.CONTAINERMODE] === 'webspeech') {\n      const WebSpeechContainer = require('./containers/WebSpeechContainer')\n      return new WebSpeechContainer(this.eventEmitter, this.tempDirectory, repo, this.caps, this.envs)\n    }\n    if (this.caps[Capabilities.CONTAINERMODE] === 'inprocess') {\n      const InProcessContainer = require('./containers/InProcessContainer')\n      return new InProcessContainer(this.eventEmitter, this.tempDirectory, repo, this.caps, this.envs)\n    }\n    const PluginConnectorContainer = require('./containers/PluginConnectorContainer')\n    return new PluginConnectorContainer(this.eventEmitter, this.tempDirectory, repo, this.caps, this.envs)\n  }\n}\n","module.exports = {\n  BotDriver: require('./src/BotDriver'),\n  Capabilities: require('./src/Capabilities'),\n  Source: require('./src/Source')\n}\n"],"names":["this","const","BotiumMockMessage","debug","super","XLSX","let","isJSON","Convo","emptylines","Utterance","CompilerBase","ConvoHeader","require$$2","require$$3","currentStepsStack","BaseRepo","childProcess","QueueTimeoutError","Queue","io","BaseContainer","randomize","EventEmitter","botiumPackageRootDir","yaml","DockerCmd","SyslogServer","fblogin","Conversation","jp","Mustache","HttpServer","socket","require","Fluent","ScriptingProvider","require$$1","require$$4","require$$5","require$$6","require$$7","require$$8","require$$9","require$$10","require$$11","require$$0"],"mappings":"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"}